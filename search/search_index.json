{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction # docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Index"},{"location":"about/contributing/","text":"","title":"Contributing"},{"location":"about/license/","text":"","title":"License"},{"location":"about/release-notes/","text":"","title":"Release Notes"},{"location":"issue/readme/","text":"","title":"Issue describe"},{"location":"issue/in_process/readme/","text":"","title":"In process"},{"location":"issue/need_review/auto_healing/","text":"","title":"Auto Healing"},{"location":"issue/need_review/readme/","text":"","title":"Need review"},{"location":"issue/propose/readme/","text":"","title":"Propose"},{"location":"issue/sloved/readme/","text":"","title":"Sloved"},{"location":"issue/start/readme/","text":"","title":"Start"},{"location":"tech_detail/aodh/aodh-doc/readme/","text":"","title":"aodh"},{"location":"tech_detail/ceilometer/ceilometer-doc/readme/","text":"","title":"ceilometer"},{"location":"tech_detail/gnocchi/gnocchi-doc/readme/","text":"","title":"gnocchi"},{"location":"tech_detail/mistral/mistral-doc/readme/","text":"","title":"mistral"},{"location":"tech_detail/tick/tick-doc/readme/","text":"","title":"TICK"},{"location":"tech_detail/vitrage/vitrage-doc/","text":"Th\u1ee9 t\u1ef1 \u0111\u1ecdc: \u2534 architecture.md: gi\u1edbi thi\u1ec7u t\u1ed5ng quan, ki\u1ebfn tr\u00fac, lu\u1ed3ng ho\u1ea1t \u0111\u1ed9ng,.. install.md: c\u00e1ch c\u00e0i \u0111\u1eb7t entity_graph.md: chi ti\u1ebft ch\u1ee9c n\u0103ng show graph: \u00fd ngh\u0129a graph, chi ti\u1ebft th\u00e0nh ph\u1ea7n datasource-driver; graph vitrage, c\u00e1ch c\u1ea5u h\u00ecnh c\u00e1c th\u1ef1c th\u1ec3 v\u1eadt l\u00fd, virtual v\u00e0o graph","title":"Home"},{"location":"tech_detail/vitrage/vitrage-doc/#thu-tu-oc","text":"architecture.md: gi\u1edbi thi\u1ec7u t\u1ed5ng quan, ki\u1ebfn tr\u00fac, lu\u1ed3ng ho\u1ea1t \u0111\u1ed9ng,.. install.md: c\u00e1ch c\u00e0i \u0111\u1eb7t entity_graph.md: chi ti\u1ebft ch\u1ee9c n\u0103ng show graph: \u00fd ngh\u0129a graph, chi ti\u1ebft th\u00e0nh ph\u1ea7n datasource-driver; graph vitrage, c\u00e1ch c\u1ea5u h\u00ecnh c\u00e1c th\u1ef1c th\u1ec3 v\u1eadt l\u00fd, virtual v\u00e0o graph","title":"Th\u1ee9 t\u1ef1 \u0111\u1ecdc:"},{"location":"tech_detail/vitrage/vitrage-doc/architecture/","text":"T\u1ed5ng quan v\u1ec1 Vitrage \u2534 Kh\u00e1i ni\u1ec7m \u2534 Vitrage - OpenStack RCA (Root Cause Analysis) l\u00e0 d\u1ecbch v\u1ee5 gi\u00fap t\u1ed5 ch\u1ee9c, ph\u00e2n t\u00edch, c\u00e1c alarm, event x\u1ea3y \u0111\u1ebfn v\u1edbi h\u1ec7 th\u1ed1ng, nh\u1eb1m l\u00e0m r\u00f5 \u0111\u01b0\u1ee3c nh\u1eefng alarm n\u00e0y c\u00f3 ngu\u1ed3n g\u1ed1c t\u1eeb \u0111\u00e2u v\u00e0 c\u00f3 th\u1ec3 g\u00e2y \u1ea3nh h\u01b0\u1edfng th\u1ebf n\u00e0o. Vitrage c\u00f3 c\u00e1c use-case t\u1ed5ng quan: Holistic and complete view: vitrage c\u00f3 th\u1ec3 bi\u1ec3u di\u1ec5n m\u1ed7i quan h\u1ec7 logic c\u1ee7a c\u00e1c t\u00e0i nguy\u00ean trong h\u1ec7 th\u1ed1ng th\u00e0nh grap+topology cho ng\u01b0\u1eddi xem, bao g\u1ed3m c\u1ea3 th\u1ef1c th\u1ec3 virtual (instance, port, zone,..) hay physical (host , switch,..) k\u1ebft n\u1ed1i v\u1edbi nhau. \u0110\u1ec3 khi c\u00f3 m\u1ed9t alarm xu\u1ea5t hi\u1ec7n t\u1eeb m\u1ed9t th\u00e0nh ph\u1ea7n ta gi\u1ea3i th\u00edch \u0111\u01b0\u1ee3c n\u00f3 s\u1ebd \u1ea3nh h\u01b0\u1edfng t\u1edbi th\u00e0nh ph\u1ea7n kh\u00e1c nh\u01b0 th\u1ebf n\u00e0o. Deduced alarm, state: m\u1ee5c \u0111\u00edch nh\u1eafm t\u1edbi l\u00e0 \u0111\u01b0a ra c\u1ea3nh b\u00e1o v\u1ec1 m\u1ed9t th\u00e0nh ph\u1ea7n h\u1ec7 th\u1ed1ng, ngay tr\u01b0\u1edbc c\u1ea3 khi n\u00f3 \u0111\u01b0\u1ee3c ph\u00e1t hi\u1ec7n tr\u1ef1c ti\u1ebfp b\u1edfi h\u1ec7 th\u1ed1ng monitor. Nh\u1ea5n m\u1ea1nh v\u00e0o y\u1ebfu t\u1ed1 \u201csuy lu\u1eadn\u201d \u0111\u1ec3 b\u1eadt m\u1ed9t deduced alarm : V\u00ed d\u1ee5: Khi switch t\u1edbi host g\u1eb7p v\u1ea5n \u0111\u1ec1, khi\u1ebfn ngay c\u00e1c instance n\u1ed1i v\u1edbi host \u0111\u00f3 c\u0169ng kh\u00f4ng monitor \u0111\u01b0\u1ee3c, vitrage c\u00f3 th\u1ec3 \u0111\u01b0a ra c\u1ea3nh b\u00e1o v\u1edbi insance. Trong m\u00f4 h\u00ecnh HA cho m\u1ed9t d\u1ecbch v\u1ee5 tr\u00ean 3 VM m\u00e0 c\u1ea3 2 VM \u0111\u1ec1u l\u1ed7i, th\u00ec vm c\u00f2n l\u1ea1i c\u1ea7n b\u1eadt warning *B\u1eadt warning tr\u00ean vm khi th\u1ea5y kh\u00f4ng \u0111\u1ee7 host \u0111\u1ec3 migrate n\u1ebfu c\u1ea7n. Root Cause Indicators: bi\u1ec3u di\u1ec5n quan h\u1ec7 nguy\u00ean nh\u00e2n-k\u1ebft qu\u1ea3 gi\u1eefa c\u00e1c alarm. Vitrage \u0111\u1ecdc c\u00e1c lu\u1eadt ng\u01b0\u1eddi d\u00f9ng \u0111\u1ecbnh ngh\u0129a, xem xem c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng lu\u1eadt n\u00e0o v\u00e0o tr\u1ea1ng th\u00e1i hi\u1ec7n t\u1ea1i v\u00e0 \u0111\u01b0a c\u00e1c li\u00ean k\u1ebft \u201ccausual\u201d v\u00e0o bi\u1ec3u \u0111\u1ed3. Gi\u00fap cho vi\u1ec7c t\u00ecm ra ngu\u1ed3n k\u00edch ho\u1ea1t g\u1ed1c c\u1ee7a cho c\u00e1c alarm. Ki\u1ebfn tr\u00fac \u2534 Vitrage bao g\u1ed3m c\u00e1c th\u00e0nh ph\u1ea7n: ClI, Drashboard, API: nh\u1eadn y\u00eau c\u1ea7u ng\u01b0\u1eddi d\u00f9ng, g\u1ecdi \u0111\u1ebfn c\u00e1c th\u00e0nh ph\u1ea7n kh\u00e1c. Vitrage data source driver: Nhi\u1ec7m v\u1ee5 l\u1ea5y input \u0111\u1ea7u v\u00e0o th\u00f4ng tin v\u1ec1 c\u00e1c resource h\u1ec7 th\u1ed1ng v\u1ec1 cho vitrage graph hi\u1ec3n th\u1ecb. D\u1eef li\u1ec7u bao g\u1ed3m th\u00f4ng tin nh\u01b0: resource c\u00f3 c\u00e1c th\u1ef1c th\u1ec3 n\u00e0o? quan h\u1ec7 gi\u1eefa c\u00e1c th\u1ef1c th\u1ec3 \u0111\u00f3. Vd: th\u1ef1c th\u1ec3 trong aodh l\u00e0 \u201calarm\u201d, c\u1ee7a nova l\u00e0 \u201czone\u201d ch\u1ee9a \u201chost\u201d ch\u1ee9a \u201cinstance\u201d. C\u00e1c datasoucrce g\u1ed3m: t\u1eeb ngu\u1ed3n openstack : aodh, ceilometer, cinder, heat, neutron, nova. t\u1eeb ngu\u1ed3n extenal monitor, g\u1ed3m: collectd, zabix, nagios, doctor. static datasource: \u0111\u1ecdc th\u00f4ng tin t\u1eeb c\u00e1c file c\u1ea5u h\u00ecnh ng\u01b0\u1eddi d\u00f9ng c\u1ea5p ( tr\u00ean l\u00e0 t\u1eeb b\u1ea3n pike-queens, b\u1ea3n rocky c\u00f3 th\u00eam kubernetes v\u00e0 prometheus) Vitrage graph: Gi\u1eef c\u00e1c th\u00f4ng tin t\u1eeb datasouce v\u00e0 tr\u00ecnh di\u1ec5n n\u00f3 ra, \u0111\u1ed3ng th\u1eddi c\u0169ng l\u1ea5y c\u1eadp nh\u1eadt c\u1ee7a kh\u1ed1i evaluator khi c\u00f3. Driver \u0111\u1ec3 v\u1ebd \u0111\u1ed3 th\u1ecb l\u00e0 networkX , \u0111\u1ed3ng th\u1eddi c\u0169ng inplement m\u00f4t s\u1ed1 ph\u00e9p x\u1eed l\u00fd \u0111\u1ed3 th\u1ecb khi \u0111\u01b0\u1ee3c g\u1ecdi, vd duy\u1ec7t, t\u00ecm \u0111\u1ec9nh, c\u1ea1nh\u2026 Vitrage evaluator: Khi c\u00f3 th\u00f4ng b\u00e1o t\u1eeb graph v\u1ec1 m\u1ed9t s\u1ed1 thay \u0111\u1ed5i c\u1ee7a c\u00e1c th\u1ef1c th\u1ec3, n\u00f3 truy v\u1ea5n trong c\u00e1c k\u1ecbch b\u1ea3n ( template do ng\u01b0\u1eddi d\u00f9ng \u0111\u1ecbnh ngh\u0129a t\u1eeb tr\u01b0\u1edbc) v\u00e0 \u00e1p d\u1ee5ng c\u00e1c thay \u0111\u1ed5i tr\u1ea1ng th\u00e1i cho c\u00e1c th\u1ef1c th\u1ec3 (set_state, raise_alarm, add_causual_relationship) Vitrage notifiers: c\u00f3 nhi\u1ec7m v\u1ee5 th\u00f4ng b\u00e1o cho c\u00e1c th\u00e0nh ph\u1ea7n kh\u00e1c v\u1ec1 c\u00e1c thay \u0111\u1ed5i trong trang th\u00e1i h\u1ec7 th\u1ed1ng, \u00e1p d\u1ee5ng c\u00e1c action l\u00ean c\u00e1c d\u1ecbch v\u1ee5 \u0111\u00f3. Hi\u1ec7n c\u00f3 c\u00e1c plugin cho: aodh, nova, mistral ; snmp, webhook. Theo default khi m\u1edbi c\u00e0i \u0111\u1eb7t, ch\u01b0a c\u00f3 plugin n\u00e0o \u00e1p d\u1ee5ng. Vitrage machine leaning: Thi\u1ebft k\u1ebf ra nh\u1eb1m gi\u00fap vitrage c\u00f3 th\u1ec3: xem x\u00e9t t\u1eeb c\u00e1c alarm , deduce-alarm \u0111\u00e3 xu\u1ea5t hi\u1ec7n, t\u00ednh rra s\u1ef1 li\u00ean quan gi\u1eefa c\u00e1c alarm, g\u1ee3i \u00fd cho ng\u01b0\u1eddi d\u00f9ng vi\u1ebft c\u00e1c template m\u1edbi. C\u00e1c lu\u1ed3ng ho\u1ea1t \u0111\u1ed9ng c\u01a1 b\u1ea3n \u2534 Tr\u01b0\u1eddng h\u1ee3p th\u00eam m\u1ed9t instance m\u1edbi: Nova t\u1ea1o th\u00eam instance , g\u1eedi th\u00f4ng b\u00e1o l\u00ean rabbitmq topic \u201cvitrage_notifications\u201d. Nova-datasouce driver nh\u1eadn th\u00f4ng b\u00e1o. Nova-datasource Driver g\u1eedi th\u00f4ng tin v\u00e0o vitrage entity queue ( b\u1ea3n ch\u1ea5t queue n\u00e0y kh\u00f4ng ph\u1ea3i message queue m\u00e0 \u0111\u01a1n gi\u1ea3n l\u00e0 m\u1ed9t m\u1ea3ng b\u00ecnh th\u01b0\u1eddng) Entity processor polling event t\u1eeb entity queue, x\u00e1c \u0111\u1ecbnh th\u00f4ng tin c\u1ee7a th\u1ef1c th\u1ec3 c\u1ea7n th\u00eam Entity trasformers chuy\u1ec3n th\u00f4ng tin c\u1ee7a th\u1ef1c th\u1ec3 v\u1ec1 c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng trong graph: \u0111\u1ec9nh, c\u1ea1nh, neghbors,... Entity processor g\u1ecdi graph api th\u00eam \u0111\u1ec9nh, c\u1ea1nh m\u1edbi. Tr\u01b0\u1eddng h\u1ee3p th\u00eam c\u00f3 m\u1ed9t alarm : Khi ph\u00e1t hi\u1ec7n switch down, vitrage nh\u1eadn \u0111\u01b0\u1ee3c alarm t\u1eeb nagios. Thi\u1ebft l\u1eadp k\u1ecbch b\u1ea3n s\u1ebd th\u1ef1c hi\u1ec7n l\u00e0: t\u1ea1o deduce-alarm tr\u00ean c\u00e1c host g\u1eafn v\u1edbi switch, c\u00e1c instance g\u1eafn tr\u00ean host v\u00e0 triger l\u1ea1i cho aodh. Alarm v\u1ec1 b\u1ea3n ch\u1ea5t c\u0169ng l\u00e0 1 entity n\u00ean c\u00e1c b\u01b0\u1edbc t\u1eeb 1 \u0111\u1ebfn 5 c\u0169ng gi\u1ed1ng nh\u01b0 use case tr\u00ean. vd th\u00eam 1 entiry c\u00f3 type alarm th\u00f4ng b\u00e1o switch m\u00e0 host 1 attach b\u1ecb down Khi c\u00f3 b\u1ea5t k\u1ef3 thay \u0111\u1ed5i n\u00e0o v\u1ec1 graph th\u00ec evaluator c\u0169ng \u0111\u01b0\u1ee3c g\u1ecdi \u0111\u1ebfn. Evaluator bi\u1ebft \u0111\u01b0\u1ee3c c\u00f3 1 \u0111\u1ec9nh m\u1edbi \u0111\u01b0\u1ee3c add Evaluator xem x\u00e9t c\u00e1c template \u0111\u00e3 c\u00f3 th\u00ec th\u1ea5y c\u00f3 1 k\u1ecbch b\u1ea3n c\u1ea7n \u00e1p d\u1ee5ng: b\u1eadt deduce-alarm error tr\u00ean m\u1ed7i instance g\u1eafn v\u1edbi host \u0111\u00f3. Evaluator push alarm v\u00e0o entity queue. Graph update th\u00eam c\u00e1c alarm m\u1edbi Graph th\u00eam th\u00f4ng b\u00e1o r\u1eb1ng c\u00f3 1 alarm m\u1edbi tr\u00ean instance, \u0111\u1ea9y th\u00f4ng b\u00e1o n\u00e0y v\u00e0o messasge queue Vitrage Notifier \u0111\u1ecbnh ngh\u0129a alarm cho aodh - set state \u201calarm\u201d Installation Guide \u2534 install vitrage Configuration Guide \u2534 entity graph Referent \u2534 https://wiki.openstack.org/wiki/Vitrage https://docs.openstack.org/vitrage/ocata/vitrage-use-cases.html","title":"vitrage"},{"location":"tech_detail/vitrage/vitrage-doc/architecture/#tong-quan-ve-vitrage","text":"","title":"T\u1ed5ng quan v\u1ec1 Vitrage"},{"location":"tech_detail/vitrage/vitrage-doc/architecture/#khai-niem","text":"Vitrage - OpenStack RCA (Root Cause Analysis) l\u00e0 d\u1ecbch v\u1ee5 gi\u00fap t\u1ed5 ch\u1ee9c, ph\u00e2n t\u00edch, c\u00e1c alarm, event x\u1ea3y \u0111\u1ebfn v\u1edbi h\u1ec7 th\u1ed1ng, nh\u1eb1m l\u00e0m r\u00f5 \u0111\u01b0\u1ee3c nh\u1eefng alarm n\u00e0y c\u00f3 ngu\u1ed3n g\u1ed1c t\u1eeb \u0111\u00e2u v\u00e0 c\u00f3 th\u1ec3 g\u00e2y \u1ea3nh h\u01b0\u1edfng th\u1ebf n\u00e0o. Vitrage c\u00f3 c\u00e1c use-case t\u1ed5ng quan: Holistic and complete view: vitrage c\u00f3 th\u1ec3 bi\u1ec3u di\u1ec5n m\u1ed7i quan h\u1ec7 logic c\u1ee7a c\u00e1c t\u00e0i nguy\u00ean trong h\u1ec7 th\u1ed1ng th\u00e0nh grap+topology cho ng\u01b0\u1eddi xem, bao g\u1ed3m c\u1ea3 th\u1ef1c th\u1ec3 virtual (instance, port, zone,..) hay physical (host , switch,..) k\u1ebft n\u1ed1i v\u1edbi nhau. \u0110\u1ec3 khi c\u00f3 m\u1ed9t alarm xu\u1ea5t hi\u1ec7n t\u1eeb m\u1ed9t th\u00e0nh ph\u1ea7n ta gi\u1ea3i th\u00edch \u0111\u01b0\u1ee3c n\u00f3 s\u1ebd \u1ea3nh h\u01b0\u1edfng t\u1edbi th\u00e0nh ph\u1ea7n kh\u00e1c nh\u01b0 th\u1ebf n\u00e0o. Deduced alarm, state: m\u1ee5c \u0111\u00edch nh\u1eafm t\u1edbi l\u00e0 \u0111\u01b0a ra c\u1ea3nh b\u00e1o v\u1ec1 m\u1ed9t th\u00e0nh ph\u1ea7n h\u1ec7 th\u1ed1ng, ngay tr\u01b0\u1edbc c\u1ea3 khi n\u00f3 \u0111\u01b0\u1ee3c ph\u00e1t hi\u1ec7n tr\u1ef1c ti\u1ebfp b\u1edfi h\u1ec7 th\u1ed1ng monitor. Nh\u1ea5n m\u1ea1nh v\u00e0o y\u1ebfu t\u1ed1 \u201csuy lu\u1eadn\u201d \u0111\u1ec3 b\u1eadt m\u1ed9t deduced alarm : V\u00ed d\u1ee5: Khi switch t\u1edbi host g\u1eb7p v\u1ea5n \u0111\u1ec1, khi\u1ebfn ngay c\u00e1c instance n\u1ed1i v\u1edbi host \u0111\u00f3 c\u0169ng kh\u00f4ng monitor \u0111\u01b0\u1ee3c, vitrage c\u00f3 th\u1ec3 \u0111\u01b0a ra c\u1ea3nh b\u00e1o v\u1edbi insance. Trong m\u00f4 h\u00ecnh HA cho m\u1ed9t d\u1ecbch v\u1ee5 tr\u00ean 3 VM m\u00e0 c\u1ea3 2 VM \u0111\u1ec1u l\u1ed7i, th\u00ec vm c\u00f2n l\u1ea1i c\u1ea7n b\u1eadt warning *B\u1eadt warning tr\u00ean vm khi th\u1ea5y kh\u00f4ng \u0111\u1ee7 host \u0111\u1ec3 migrate n\u1ebfu c\u1ea7n. Root Cause Indicators: bi\u1ec3u di\u1ec5n quan h\u1ec7 nguy\u00ean nh\u00e2n-k\u1ebft qu\u1ea3 gi\u1eefa c\u00e1c alarm. Vitrage \u0111\u1ecdc c\u00e1c lu\u1eadt ng\u01b0\u1eddi d\u00f9ng \u0111\u1ecbnh ngh\u0129a, xem xem c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng lu\u1eadt n\u00e0o v\u00e0o tr\u1ea1ng th\u00e1i hi\u1ec7n t\u1ea1i v\u00e0 \u0111\u01b0a c\u00e1c li\u00ean k\u1ebft \u201ccausual\u201d v\u00e0o bi\u1ec3u \u0111\u1ed3. Gi\u00fap cho vi\u1ec7c t\u00ecm ra ngu\u1ed3n k\u00edch ho\u1ea1t g\u1ed1c c\u1ee7a cho c\u00e1c alarm.","title":"Kh\u00e1i ni\u1ec7m"},{"location":"tech_detail/vitrage/vitrage-doc/architecture/#kien-truc","text":"Vitrage bao g\u1ed3m c\u00e1c th\u00e0nh ph\u1ea7n: ClI, Drashboard, API: nh\u1eadn y\u00eau c\u1ea7u ng\u01b0\u1eddi d\u00f9ng, g\u1ecdi \u0111\u1ebfn c\u00e1c th\u00e0nh ph\u1ea7n kh\u00e1c. Vitrage data source driver: Nhi\u1ec7m v\u1ee5 l\u1ea5y input \u0111\u1ea7u v\u00e0o th\u00f4ng tin v\u1ec1 c\u00e1c resource h\u1ec7 th\u1ed1ng v\u1ec1 cho vitrage graph hi\u1ec3n th\u1ecb. D\u1eef li\u1ec7u bao g\u1ed3m th\u00f4ng tin nh\u01b0: resource c\u00f3 c\u00e1c th\u1ef1c th\u1ec3 n\u00e0o? quan h\u1ec7 gi\u1eefa c\u00e1c th\u1ef1c th\u1ec3 \u0111\u00f3. Vd: th\u1ef1c th\u1ec3 trong aodh l\u00e0 \u201calarm\u201d, c\u1ee7a nova l\u00e0 \u201czone\u201d ch\u1ee9a \u201chost\u201d ch\u1ee9a \u201cinstance\u201d. C\u00e1c datasoucrce g\u1ed3m: t\u1eeb ngu\u1ed3n openstack : aodh, ceilometer, cinder, heat, neutron, nova. t\u1eeb ngu\u1ed3n extenal monitor, g\u1ed3m: collectd, zabix, nagios, doctor. static datasource: \u0111\u1ecdc th\u00f4ng tin t\u1eeb c\u00e1c file c\u1ea5u h\u00ecnh ng\u01b0\u1eddi d\u00f9ng c\u1ea5p ( tr\u00ean l\u00e0 t\u1eeb b\u1ea3n pike-queens, b\u1ea3n rocky c\u00f3 th\u00eam kubernetes v\u00e0 prometheus) Vitrage graph: Gi\u1eef c\u00e1c th\u00f4ng tin t\u1eeb datasouce v\u00e0 tr\u00ecnh di\u1ec5n n\u00f3 ra, \u0111\u1ed3ng th\u1eddi c\u0169ng l\u1ea5y c\u1eadp nh\u1eadt c\u1ee7a kh\u1ed1i evaluator khi c\u00f3. Driver \u0111\u1ec3 v\u1ebd \u0111\u1ed3 th\u1ecb l\u00e0 networkX , \u0111\u1ed3ng th\u1eddi c\u0169ng inplement m\u00f4t s\u1ed1 ph\u00e9p x\u1eed l\u00fd \u0111\u1ed3 th\u1ecb khi \u0111\u01b0\u1ee3c g\u1ecdi, vd duy\u1ec7t, t\u00ecm \u0111\u1ec9nh, c\u1ea1nh\u2026 Vitrage evaluator: Khi c\u00f3 th\u00f4ng b\u00e1o t\u1eeb graph v\u1ec1 m\u1ed9t s\u1ed1 thay \u0111\u1ed5i c\u1ee7a c\u00e1c th\u1ef1c th\u1ec3, n\u00f3 truy v\u1ea5n trong c\u00e1c k\u1ecbch b\u1ea3n ( template do ng\u01b0\u1eddi d\u00f9ng \u0111\u1ecbnh ngh\u0129a t\u1eeb tr\u01b0\u1edbc) v\u00e0 \u00e1p d\u1ee5ng c\u00e1c thay \u0111\u1ed5i tr\u1ea1ng th\u00e1i cho c\u00e1c th\u1ef1c th\u1ec3 (set_state, raise_alarm, add_causual_relationship) Vitrage notifiers: c\u00f3 nhi\u1ec7m v\u1ee5 th\u00f4ng b\u00e1o cho c\u00e1c th\u00e0nh ph\u1ea7n kh\u00e1c v\u1ec1 c\u00e1c thay \u0111\u1ed5i trong trang th\u00e1i h\u1ec7 th\u1ed1ng, \u00e1p d\u1ee5ng c\u00e1c action l\u00ean c\u00e1c d\u1ecbch v\u1ee5 \u0111\u00f3. Hi\u1ec7n c\u00f3 c\u00e1c plugin cho: aodh, nova, mistral ; snmp, webhook. Theo default khi m\u1edbi c\u00e0i \u0111\u1eb7t, ch\u01b0a c\u00f3 plugin n\u00e0o \u00e1p d\u1ee5ng. Vitrage machine leaning: Thi\u1ebft k\u1ebf ra nh\u1eb1m gi\u00fap vitrage c\u00f3 th\u1ec3: xem x\u00e9t t\u1eeb c\u00e1c alarm , deduce-alarm \u0111\u00e3 xu\u1ea5t hi\u1ec7n, t\u00ednh rra s\u1ef1 li\u00ean quan gi\u1eefa c\u00e1c alarm, g\u1ee3i \u00fd cho ng\u01b0\u1eddi d\u00f9ng vi\u1ebft c\u00e1c template m\u1edbi.","title":"Ki\u1ebfn tr\u00fac"},{"location":"tech_detail/vitrage/vitrage-doc/architecture/#cac-luong-hoat-ong-co-ban","text":"Tr\u01b0\u1eddng h\u1ee3p th\u00eam m\u1ed9t instance m\u1edbi: Nova t\u1ea1o th\u00eam instance , g\u1eedi th\u00f4ng b\u00e1o l\u00ean rabbitmq topic \u201cvitrage_notifications\u201d. Nova-datasouce driver nh\u1eadn th\u00f4ng b\u00e1o. Nova-datasource Driver g\u1eedi th\u00f4ng tin v\u00e0o vitrage entity queue ( b\u1ea3n ch\u1ea5t queue n\u00e0y kh\u00f4ng ph\u1ea3i message queue m\u00e0 \u0111\u01a1n gi\u1ea3n l\u00e0 m\u1ed9t m\u1ea3ng b\u00ecnh th\u01b0\u1eddng) Entity processor polling event t\u1eeb entity queue, x\u00e1c \u0111\u1ecbnh th\u00f4ng tin c\u1ee7a th\u1ef1c th\u1ec3 c\u1ea7n th\u00eam Entity trasformers chuy\u1ec3n th\u00f4ng tin c\u1ee7a th\u1ef1c th\u1ec3 v\u1ec1 c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng trong graph: \u0111\u1ec9nh, c\u1ea1nh, neghbors,... Entity processor g\u1ecdi graph api th\u00eam \u0111\u1ec9nh, c\u1ea1nh m\u1edbi. Tr\u01b0\u1eddng h\u1ee3p th\u00eam c\u00f3 m\u1ed9t alarm : Khi ph\u00e1t hi\u1ec7n switch down, vitrage nh\u1eadn \u0111\u01b0\u1ee3c alarm t\u1eeb nagios. Thi\u1ebft l\u1eadp k\u1ecbch b\u1ea3n s\u1ebd th\u1ef1c hi\u1ec7n l\u00e0: t\u1ea1o deduce-alarm tr\u00ean c\u00e1c host g\u1eafn v\u1edbi switch, c\u00e1c instance g\u1eafn tr\u00ean host v\u00e0 triger l\u1ea1i cho aodh. Alarm v\u1ec1 b\u1ea3n ch\u1ea5t c\u0169ng l\u00e0 1 entity n\u00ean c\u00e1c b\u01b0\u1edbc t\u1eeb 1 \u0111\u1ebfn 5 c\u0169ng gi\u1ed1ng nh\u01b0 use case tr\u00ean. vd th\u00eam 1 entiry c\u00f3 type alarm th\u00f4ng b\u00e1o switch m\u00e0 host 1 attach b\u1ecb down Khi c\u00f3 b\u1ea5t k\u1ef3 thay \u0111\u1ed5i n\u00e0o v\u1ec1 graph th\u00ec evaluator c\u0169ng \u0111\u01b0\u1ee3c g\u1ecdi \u0111\u1ebfn. Evaluator bi\u1ebft \u0111\u01b0\u1ee3c c\u00f3 1 \u0111\u1ec9nh m\u1edbi \u0111\u01b0\u1ee3c add Evaluator xem x\u00e9t c\u00e1c template \u0111\u00e3 c\u00f3 th\u00ec th\u1ea5y c\u00f3 1 k\u1ecbch b\u1ea3n c\u1ea7n \u00e1p d\u1ee5ng: b\u1eadt deduce-alarm error tr\u00ean m\u1ed7i instance g\u1eafn v\u1edbi host \u0111\u00f3. Evaluator push alarm v\u00e0o entity queue. Graph update th\u00eam c\u00e1c alarm m\u1edbi Graph th\u00eam th\u00f4ng b\u00e1o r\u1eb1ng c\u00f3 1 alarm m\u1edbi tr\u00ean instance, \u0111\u1ea9y th\u00f4ng b\u00e1o n\u00e0y v\u00e0o messasge queue Vitrage Notifier \u0111\u1ecbnh ngh\u0129a alarm cho aodh - set state \u201calarm\u201d","title":"C\u00e1c lu\u1ed3ng ho\u1ea1t \u0111\u1ed9ng c\u01a1 b\u1ea3n"},{"location":"tech_detail/vitrage/vitrage-doc/architecture/#installation-guide","text":"install vitrage","title":"Installation Guide"},{"location":"tech_detail/vitrage/vitrage-doc/architecture/#configuration-guide","text":"entity graph","title":"Configuration Guide"},{"location":"tech_detail/vitrage/vitrage-doc/architecture/#referent","text":"https://wiki.openstack.org/wiki/Vitrage https://docs.openstack.org/vitrage/ocata/vitrage-use-cases.html","title":"Referent"},{"location":"tech_detail/vitrage/vitrage-doc/deduce_alarm/","text":"T\u1ed5ng quan: Tem Khi b\u1eaft \u0111\u1ea7u ch\u1ea1y c\u00e1c service c\u1ee7a vitrage, th\u00e0nh ph\u1ea7n Scenario Evaluator \u0111\u01b0\u1ee3c g\u1ecdi \u0111\u1ebfn ngay sau khi t\u1ea5t c\u1ea3 datasoucrce g\u1ecdi get-all() l\u1ea5y v\u1ec1 h\u1ebft c\u00e1c element. Evaluator g\u1ecdi ngay khi c\u00f3 events \u0111\u1ebfn v\u1edbi graph : (create/update/delete) trong c\u00e1c element (vertex/edge) metadata: name: basic_template description: basic template for general tests definitions: entities: - entity: category: ALARM template_id: alarm type: zabbix name: HOST_HIGH_CPU_LOAD - entity: category: RESOURCE template_id: resource type: nova.host relationships: - relationship: source: alarm target: resource relationship_type: on template_id : alarm_on_host scenarios: - scenario: condition: alarm_on_host actions: - action: action_type: set_state properties: state: SUBOPTIMAL action_target: target: resource set_state: Two scenarios setting the state of the same resource raise_alarm: Two scenarios raising the same deduced alarm (with possibly different severity) add_causal_relationship: Two scenarios adding the same causal relationship CRITICAL SEVERE WARNING N/A OK DELETED ERROR SUBOPTIMAL TRANSIENT OK - entity: category: RESOURCE type: nova.instance template_id: instance1 category ,type, template-id: condition convert DNF Disjunctive Normal Form d\u1ea1ng [[and_var1, and_var2, \u2026], or_list_2, \u2026]. T\u1ee9c ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng c\u00e1c ph\u00e9p and, or , not (kh\u00f4ng th\u1ec3 vi\u1ebft 1 condition to\u00e0n ph\u00e9p not) Use case 1: - Deduce-alarm: N\u1ebfu c\u00f3 alarm tr\u00ean host (cpu cao v\u01b0\u1ee3t ng\u01b0\u1ee1ng) = c\u00f3 alarm v\u1ec1 cao CPU tr\u00ean c\u00e1c instance c\u1ee7a host \u0111\u00f3 = chuy\u1ec3n state c\u1ee7a host v\u00e0 instance v\u1ec1 WARNING - RCA: alarm v\u1ec1 cao CPU c\u1ee7a host = alarm c\u1ee7a instance v\u00e0 ki\u1ec3m tra trong c\u00e1c tr\u01b0\u1eddng h\u1ee3p: - Alarm c\u1ee7a instance l\u00e0 alarm deduce t\u1eeb vitrage - Alarm c\u1ee7a instance \u0111\u01b0\u1ee3c b\u00e1o v\u1ec1 t\u1eeb aodh Use case 2: - Deduce-alarm N\u1ebfu c\u00f3 alarm tr\u00ean port switch n\u1ed1i v\u1edbi host b\u1ecb DOWN = c\u00f3 alarm m\u1ea5t k\u1ebft n\u1ed1i tr\u00ean instrance \u1ea3nh h\u01b0\u1edfng = chuy\u1ec3n state c\u1ee7a host v\u00e0 instance v\u1ec1 WARNING, ERROR - RCA: alarm c\u1ee7a port switch = alarm m\u1ea5t k\u1ebft n\u1ed1i c\u1ee7a instance - Alarm c\u1ee7a instance l\u00e0 alarm deduce t\u1eeb vitrage - Alarm c\u1ee7a instance \u0111\u01b0\u1ee3c b\u00e1o v\u1ec1 t\u1eeb aodh vitrage template validate --type standard --path /etc/vitrage/templates/port_switch_down_scenarios.yaml ?[--type {standard,definition,equivalence}]","title":"Deduce alarm"},{"location":"tech_detail/vitrage/vitrage-doc/entity_graph/","text":"V\u1edbi m\u1ee5c \u0111\u00edch t\u1ed5 ch\u1ee9c resource, ph\u00e2n t\u00edch alarm c\u1ee7a vitrage th\u00ec ch\u1ee9c n\u0103ng hi\u1ec3n th\u1ecb ra graph l\u00e0 t\u00ednh n\u0103ng quan tr\u1ecdng nh\u1ea5t c\u1ee7a vitrage. Graph \u0111\u01b0\u1ee3c vitrage hi\u1ec3n th\u1ecb c\u00f3 th\u1ec3 \u0111\u01b0a ra m\u00f4 h\u00ecnh c\u00e1c th\u1ef1c th\u1ec3 h\u1ec7 th\u1ed1ng, state + relation gi\u1eefa c\u00e1c th\u1ef1c th\u1ec3. 1. Ho\u1ea1t \u0111\u1ed9ng t\u1ea1o graph \u2534 2 th\u00e0nh ph\u1ea7n \u0111\u00f3ng g\u00f3p ho\u1ea1t \u0111\u1ed9ng ch\u00ednh trong t\u1ea1o graph n\u00e0y l\u00e0 vitrage datasouce-driver v\u00e0 vitrage graph. Vitrage datasource-driver tr\u00e1ch nhi\u1ec7m : - Thu th\u1eadp th\u00f4ng tin c\u1ee7a c\u00e1c service trong h\u1ec7 th\u1ed1ng (nova, neutron, cinder, heat,..), \u0111\u01b0a ra \u0111\u01b0\u1ee3c c\u00e1c th\u1ef1c th\u1ec3 (entity) v\u00e0 m\u1ed1i quan h\u1ec7 (relationships) gi\u1eefa ch\u00fang. M\u1ed7i th\u1ef1c th\u1ec3 c\u00f3 th\u1ec3 l\u00e0 : - m\u1ed9t resource : host, volume, stack,... - m\u1ed9t alarm : aodh alarm, zabbix alarm, nagios alarm (alarm hay resoucre \u0111\u01b0\u1ee3c ph\u00e2n bi\u1ec7t b\u1edfi thu\u1ed9c t\u00ednh \"category\" c\u1ee7a th\u1ef1c th\u1ec3.) - \u0110\u1ed3ng th\u1eddi c\u0169ng n\u00f3 \u0111\u1ecbnh ngh\u0129a ra c\u00e1ch chuy\u1ec3n h\u00f3a th\u00f4ng tin n\u00e0y v\u1ec1 c\u00e1c \u0111\u1ed5i t\u01b0\u1ee3ng \u0111\u1ec9nh, c\u1ea1nh v\u00e0 g\u1ecdi \u0111\u1ebfn vitrage graph \u0111\u1ec3 hi\u1ec3n th\u1ecb M\u1ed7i datasouce driver \u0111\u1ecbnh ngh\u0129a 2 class: Driver Class, Transformer Class - Driver Class : \u0110\u1ecbnh ngh\u0129a c\u00e1ch l\u1ea5y th\u00f4ng tin v\u1ec1 th\u1ef1c th\u1ec3: resources (physical, virtual) ; alarms (Aodh, Nagios, Zabbix...) c\u00e1c s\u1ef1 c\u00e1ch th\u1ee9c l\u1ea5y th\u00f4ng tin - Transformer Class: \u0110\u1ecbnh ngh\u0129a c\u00e1ch \u0111\u01b0a \u0111\u01b0\u1ee3c th\u00f4ng tin \u0111\u00f3 v\u00e0o \u0111\u1ed3 th\u1ecb, nh\u01b0: v\u1edbi m\u1ed7i s\u1ef1 ki\u1ec7n c\u1ea7n th\u00eam, s\u1eeda x\u00f3a c\u00e1c \u0111\u1ec9nh, c\u1ea1nh nh\u01b0 th\u1ebf n\u00e0o Khi kh\u1edfi t\u1ea1o graph, datasouce driver g\u1ecdi \"get-all\" - l\u1ea5y v\u1ec1 to\u00e0n b\u1ed9 th\u00f4ng tin h\u1ec7 th\u1ed1ng hi\u1ec7n t\u1ea1i. B\u1eb1ng c\u00e1ch t\u1ea1o c\u00e1c client g\u1ecdi \u0111\u1ebfn api c\u1ee7a m\u1ed7i service (nova, neutron,...) Defaut c\u1ee9 10 ph\u00fat, diver l\u1ea1i snapshot d\u1eef li\u1ec7u hi\u1ec7n t\u1ea1i v\u00e0 g\u1ecdi get-all m\u1ed9t l\u1ea7n Khi c\u00f3 s\u1ef1 thay \u0111\u1ed5i trong h\u1ec7 th\u1ed1ng : vd th\u00eam b\u1edbt host, c\u00f3 aodh alarm. Vitrage nh\u1eadn bi\u1ebft b\u1edfi 1 trong 2 c\u00e1ch: - polling mechanism: g\u1ecdi \u0111\u1ebfn h\u00e0m get_changes - \u0111\u1ecbnh ngh\u0129a trong Driver Class - pushing mechanism: \u0111\u1ecdc \u0111\u01b0\u1ee3c messeage t\u1eeb message queue m\u00e0 service \u0111\u00f3 g\u1eedi l\u00ean, topic \"vitrage_notifications\" ( ch\u1ec9 c\u00f3 static datasouce driver d\u00f9ng polling - t\u1ee9c s\u1ebd \u0111\u1ecdc t\u1eeb th\u01b0 m\u1ee5c- ho\u1eb7c trong database; c\u00e1c datasouce kh\u00e1c \u0111\u1ec1u s\u1eed d\u1ee5ng pushing mechaism) Xem th\u00eam v\u1ec1 c\u00e1ch vi\u1ebft 1 datasouce t\u1ea1i : https://github.com/openstack/vitrage/blob/stable/queens/doc/source/contributor/add-new-datasource.rst Vitrage graph c\u00f3 tr\u00e1ch nhi\u1ec7m: K\u1ebft n\u1ed1i v\u1edbi networkx \u0111\u1ec3 tr\u00ecnh di\u1ec5n \u0111\u1ed3 th\u1ecb cho ng\u01b0\u1eddi d\u00f9ng. \u0110\u1ed3ng th\u1eddi n\u00f3 c\u0169ng tr\u1ea3 l\u1eddi c\u00e1c truy v\u1eabn \u0111\u1ed3 th\u1ecb c\u1ee7a khi c\u00e1c th\u00e0nh ph\u1ea7n kh\u00e1c h\u1ecfi \u0111\u1ebfn (vd vitrage-evaluator g\u1ecdi khi th\u1ef1c hi\u1ec7n c\u00e1c k\u1ecbch b\u1ea3n deduce-alarm; rca) C\u00e1c lo\u1ea1i datasouce: \u2534 openstack datasource: aodh, ceilometer, cinder, heat, neutron, nova. extenal monitor datasource: collectd, zabix, nagios, doctor. static datasource: \u0111\u1ecdc th\u00f4ng tin t\u1eeb c\u00e1c file c\u1ea5u h\u00ecnh ng\u01b0\u1eddi d\u00f9ng c\u1ea5p C\u00e1ch vitrage chu\u1ea9n h\u00f3a th\u00f4ng tin v\u1ec1 tr\u1ea1ng th\u00e1i c\u1ee7a c\u00e1c th\u1ef1c th\u1ec3 t\u1eeb datasouce: https://github.com/openstack/vitrage/blob/stable/queens/doc/source/contributor/alarm-severity-config.rst https://github.com/openstack/vitrage/blob/stable/queens/doc/source/contributor/resource-state-config.rst C\u00e1c openstack datasource th\u00ec ta ch\u1ec9 c\u1ea7n c\u1ea5u h\u00ecnh oslo messaging notifications v\u00e0o topic vitrage_notifications ; 2 ngu\u1ed3n c\u00f2n l\u1ea1i thi\u1ebft \u0111\u1eb7t c\u00f3 ph\u1ee9c t\u1ea1p h\u01a1n \u0111\u01b0\u1ee3c \u0111\u1ec1 c\u1eadp \u1edf d\u01b0\u1edbi \u0111\u00e2y. C\u00e1ch c\u1ea5u h\u00ecnh static datasource: \u2534 M\u1ee5c \u0111\u00edch th\u00eam static datasource l\u00e0 gi\u00fap ng\u01b0\u1eddi d\u00f9ng b\u1ed5 sung v\u00e0o \u0111\u1ed3 th\u1ecb c\u00e1c th\u1ef1c th\u1ec3 ch\u01b0a qu\u1ea3n l\u00fd b\u1edfi b\u1ea5t k\u1ef3 datasouce n\u00e0o kh\u00e1c, n\u00f3 c\u00f3 th\u1ec3 m\u00f4 t\u1ea3 cho \u0111\u1ed1i t\u01b0\u1ee3ng physical, virtual ho\u1eb7c application vd: switch, route, service,... Th\u00eam v\u00e0o /etc/vitrage/vitrage.conf: [static] directory = /etc/vitrage/static_datasources/ changes_interval = 10 Trong \u0111\u00f3 directory n\u01a1i ch\u1ee9a c\u00e1c file yaml khai b\u00e1o static; changes_interval 10s cho bi\u1ebft vitrage s\u1ebd ki\u1ec3m tra thay \u0111\u1ed5i trong th\u01b0 m\u1ee5c 10s m\u1ed9t l\u1ea7n Template cho khai b\u00e1o cho static datasouce c\u00f3 d\u1ea1ng: metadata: name: name template description: description definitions: entities: - static_id: s1 type: switch id: 12345 name: switch-1 state: active ... - static_id: h1 type: nova.host id: 1 state: active purpose: CI ... relationships: - source: s1 target: h1 relationship_type: attached M\u1ee5c metadata: khai b\u00e1o th\u00f4ng tin c\u1ee7a t\u00e0i li\u1ec7u M\u1ee5c definitions: khai b\u00e1o c\u00e1c th\u1ef1c th\u1ec3 mu\u1ed1n th\u00eam v\u00e0o: - entities : danh s\u00e1ch th\u1ef1c th\u1ec3 mu\u1ed1n th\u00eam , trong \u0111\u00f3: static_id : id d\u00f9ng trong template, ph\u1ea1m vi n\u1eb1m trong 1 template, m\u1ee5c \u0111\u00edch nh\u01b0 t\u00ean vi\u1ebft g\u1ecdn type : ki\u1ec3u resource, c\u00f3 th\u1ec3 khai b\u00e1o b\u1ea5t k\u1ef3 ki\u1ec3u n\u00e0o, c\u00f3 th\u1ec3 l\u00e0 ki\u1ec3u c\u00f3 s\u1eb5n: openstack.cluster, nova.zone, nova.host, nova.instance, cinder.volume, neutron.network, neutron.port, heat.stack ; hay ki\u1ec3u ri\u00eang t\u00f9y ng\u01b0\u1eddi d\u00f9ng, vd port-switch, port-host,... id : \u0111\u1ecbnh danh, id v\u00e0 type c\u01a1 b\u1ea3n s\u1ebd l\u00e0 \u00e1nh x\u1ea1 1 ph\u1ea7n t\u1eed t\u1eeb th\u1ebf gi\u1edbi th\u1ef1c v\u00e0o graph name : t\u00ean resource state : gi\u00e1 tr\u1ecb t\u00f9y ch\u1ecdn, n\u1ebfu l\u00e0 resource \u0111\u00e3 c\u00f3 s\u1eb5n trong \u0111\u1ed3 th\u1ecb ta kh\u00f4ng c\u1ea7n khai b\u00e1o v\u00e0o. Nh\u01b0ng n\u1ebfu \u0111\u00e2y l\u1ea7n \u0111\u1ea7u resource th\u00eam v\u00e0o th\u00ec bu\u1ed9c ph\u1ea3i c\u00f3, th\u01b0\u1eddng \u0111\u1ec3 gi\u00e1 tr\u1ecb l\u00e0 active ho\u1eb7c avalable - relationships : quan h\u1ec7 gi\u1eefa c\u00e1c th\u1ef1c th\u1ec3 : source , target : static id c\u1ee7a th\u1ef1c th\u1ec3 ngu\u1ed3n, \u0111\u00edch relationship_type : c\u00f3 th\u1ec3 nh\u1eadn b\u1ea5t k\u1ef3 gi\u00e1 tr\u1ecb n\u00e0o. Th\u1ec3 hi\u1ec7n m\u1ed1i quan h\u1ec7 2 th\u1ef1c th\u1ec3 (hay nh\u00e3n c\u1ee7a c\u1ea1nh n\u1ed1i 2 \u0111\u1ec9nh Tuy nhi\u00ean \u0111\u1ec3 v\u1ec1 sau vi\u1ebft template cho ch\u00ednh x\u00e1c, relationship_type th\u01b0\u1eddng li\u00ean quan \u0111\u1ebfn type c\u1ee7a source v\u00e0 target. D\u01b0\u1edbi \u0111\u00e2y l\u00e0 c\u00e1c quan h\u1ec7 \u0111\u01b0\u1ee3c quy \u01b0\u1edbc ng\u1ea7m c\u1ee7a c\u00e1c datasoucre s\u1eb5n c\u00f3 c\u1ee7a vitrage: - 'on' : aodh (alarm) on nova.instance. - 'contains' : openstack.cluster contains nova.zone ; nova.zone contains nova.host ; nova.host contains nova.instance ; neutron.network contains neutron.port - 'attached' : nova.instance attached cinder.volume ; nova.instance attached neutron.port - 'comprised': heat.stack comprised nova.instance ; heat.stack comprised cinder.volume ; heat.stack comprised neutron.network ; heat.stack comprised neutron.port \u0110\u1ec3 m\u00f4 t\u1ea3 c\u00e1c entity v\u1eadt l\u00fd : hi\u1ec7n c\u00f3 switch, port switch, port host, em c\u00f3 khai b\u00e1o trong c\u00e1c file static datasource config c\u00e1c type entity: - switch : t\u01b0\u01a1ng \u1ee9ng v\u1edbi switch - port_switch: port g\u1eafn v\u1edbi switch - port_host : port v\u1eadt l\u00fd g\u1eafn v\u1edbi host - port_ovs : port virtual t\u1ea1o v\u1edbi ovs M\u1ed9t s\u1ed1 relationship_type em \u0111\u1eb7t t\u01b0\u01a1ng \u1ee9ng cho c\u00e1c static entity khi tr\u00ean: - 'attached' : port_switch attached switch ; port_host attached nova.host ; port_ovs attached neutron.network - 'connect' : port_switch connect port_host ; port_host connect port_ovs (vi\u1ec7c t\u00e1ch bi\u1ec7t t\u1eebng lo\u1ea1i port nh\u01b0 v\u1eady th\u1ea5y s\u1ebd c\u00f3 l\u1ee3i tr\u00e1nh nh\u1eadp nh\u1eb1ng khi vi\u1ebft template sau n\u00e0y) V\u00ed d\u1ee5 add static cho m\u00f4 h\u00ecnh nh\u01b0 h\u00ecnh v\u1ebd \u0111\u1ea7u b\u00e0i vi\u1ebft: cluster c\u00f3 2 host, \u0111\u01b0\u1ee3c g\u1eafn v\u00e0o c\u00f9ng switch tr\u00ean port enp4s0f0 , \u0111\u1ed3ng th\u1eddi m\u1ed7i port n\u00e0y \u0111\u1ec1u k\u1ebft n\u1ed1i vitrual port br-provider : Ta c\u1ea5u static datasource nh\u01b0 sau: Th\u00eam file /etc/vitrage/static_datasources/port_host-controller.yaml : th\u00eam static c\u00e1c port c\u1ee7a host 1 Th\u00eam file /etc/vitrage/static_datasources/port_host-compute02.yaml : th\u00eam static c\u00e1c port c\u1ee7a host 2 Th\u00eam file /etc/vitrage/static_datasources/port_switch-01.yaml : th\u00eam static c\u00e1c port c\u1ee7a switch Th\u00eam file /etc/vitrage/static_datasources/connect_port.yaml : bi\u1ec3u th\u1ecb m\u1ed1i quan h\u1ec7 k\u1ebft n\u1ed1i c\u1ee7a c\u00e1c port host v\u00e0o port switch C\u00e1ch c\u1ea5u h\u00ecnh zabbix datasouce: \u2534 M\u1ee5c \u0111\u00edch l\u00e0 gi\u00fap vitrage c\u00f3 \u0111\u01b0\u1ee3c c\u00e1c th\u00f4ng tin monitor t\u1eeb c\u00e1c ngu\u1ed3n physical: port, host t\u1eeb ngu\u1ed3n external datasource (zabbix) mang v\u1ec1 C\u00e0i \u0111\u1eb7t zabbix : https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-zabbix-to-securely-monitor-remote-servers-on-ubuntu-16-04 C\u1ea5u h\u00ecnh mapping c\u00e1c alarm t\u1ea1i th\u1ef1c th\u1ec3 v\u1eadt l\u00fd c\u1ee7a zabbix v\u00e0o th\u1ef1c th\u1ec3 tr\u00ean graph: 1.Thi\u1ebft l\u1eadp monior port tr\u00ean zabbix: C\u1ea5u h\u00ecnh zabbix \u0111\u1ec3 ph\u00e1t hi\u1ec7n m\u1ed9t port c\u1ee7a switch down C\u1ea5u h\u00ecnh zabbix \u0111\u1ec3 ph\u00e1t hi\u1ec7n m\u1ed9t port c\u1ee7a host down (m\u1ed7i port c\u1ee7a switch c\u1ea5u h\u00ecnh t\u01b0\u01a1ng \u1ee9ng 1 zabbix host, m\u1ed7i port c\u1ee7a host c\u0169ng c\u1ea5u h\u00ecnh th\u00e0nh 1 zabbix host) 2. C\u1ea5u h\u00ecnh \u0111\u1ec3 khi triger zabbix b\u1eadt l\u00ean s\u1ebd g\u1eedi c\u1ea3nh b\u00e1o v\u1ec1 vitrage ( g\u1eedi v\u00e0o rabbitmq) Ref: https://docs.openstack.org/vitrage/latest/contributor/zabbix_vitrage.html 3/Thi\u1ebft l\u1eadp t\u1ea1i vitrage Th\u00eam v\u00e0o file /etc/vitrage/vitrage.conf: ``` [datasources] snapshots_interval = 300 Names of supported plugins (list value) \u2534 types = zabbix,nova.host,nova.instance,nova.zone,static,aodh,cinder.volume,neutron.network,neutron.port,heat.stack [zabbix] url = http:// /zabbix password = zabbix user = admin config_file = /etc/vitrage/zabbix_conf.yaml ``` Mapping c\u00e1c th\u1ef1c th\u1ec3 c\u1ee7a zabbix qu\u1ea3n l\u00fd v\u00e0o c\u00e1c static resource entity vitrage \u0111\u00e3 c\u1ea5u h\u00ecnh . Vd: theo nh\u01b0 m\u00f4 h\u00ecnh nh\u01b0 tr\u00ean h\u00ecnh , ta mapping c\u00e1c port c\u1ee7a host, switch zabbix monitor v\u00e0o c\u00e1c static datasource . T\u1ea1i zabbix \u0111\u00e3 t\u1ea1o \u0111\u1ee7 c\u00e1c host: Th\u00eam file zabbix_conf.yaml: ``` cat /etc/vitrage/zabbix_conf.yaml zabbix: - zabbix_host: controller port enp4s0f0 type: port name: controller-port-enp4s0f0 - zabbix_host: compute02 port enp4s0f0 type: port name: compute02-port-enp4s0f0 - zabbix_host: Interface Gi1-0-21 type: port name: switch-port-g-1-0-21 - zabbix_host: Interface Gi1-0-20 type: port name: switch-port-g-1-0-20 - zabbix_host: Interface Gi1-0-22 type: port name: switch-port-g-1-0-22 ``` M\u1ed9t s\u1ed1 l\u1ed7i \u0111\u00e3 g\u1eb7p \u2534 Ref \u2534 https://docs.openstack.org/vitrage/latest/contributor/static-config.html https://docs.openstack.org/vitrage/latest/contributor/add-new-datasource.html https://docs.openstack.org/vitrage/latest/contributor/configuration.html","title":"Entity graph"},{"location":"tech_detail/vitrage/vitrage-doc/entity_graph/#1-hoat-ong-tao-graph","text":"2 th\u00e0nh ph\u1ea7n \u0111\u00f3ng g\u00f3p ho\u1ea1t \u0111\u1ed9ng ch\u00ednh trong t\u1ea1o graph n\u00e0y l\u00e0 vitrage datasouce-driver v\u00e0 vitrage graph. Vitrage datasource-driver tr\u00e1ch nhi\u1ec7m : - Thu th\u1eadp th\u00f4ng tin c\u1ee7a c\u00e1c service trong h\u1ec7 th\u1ed1ng (nova, neutron, cinder, heat,..), \u0111\u01b0a ra \u0111\u01b0\u1ee3c c\u00e1c th\u1ef1c th\u1ec3 (entity) v\u00e0 m\u1ed1i quan h\u1ec7 (relationships) gi\u1eefa ch\u00fang. M\u1ed7i th\u1ef1c th\u1ec3 c\u00f3 th\u1ec3 l\u00e0 : - m\u1ed9t resource : host, volume, stack,... - m\u1ed9t alarm : aodh alarm, zabbix alarm, nagios alarm (alarm hay resoucre \u0111\u01b0\u1ee3c ph\u00e2n bi\u1ec7t b\u1edfi thu\u1ed9c t\u00ednh \"category\" c\u1ee7a th\u1ef1c th\u1ec3.) - \u0110\u1ed3ng th\u1eddi c\u0169ng n\u00f3 \u0111\u1ecbnh ngh\u0129a ra c\u00e1ch chuy\u1ec3n h\u00f3a th\u00f4ng tin n\u00e0y v\u1ec1 c\u00e1c \u0111\u1ed5i t\u01b0\u1ee3ng \u0111\u1ec9nh, c\u1ea1nh v\u00e0 g\u1ecdi \u0111\u1ebfn vitrage graph \u0111\u1ec3 hi\u1ec3n th\u1ecb M\u1ed7i datasouce driver \u0111\u1ecbnh ngh\u0129a 2 class: Driver Class, Transformer Class - Driver Class : \u0110\u1ecbnh ngh\u0129a c\u00e1ch l\u1ea5y th\u00f4ng tin v\u1ec1 th\u1ef1c th\u1ec3: resources (physical, virtual) ; alarms (Aodh, Nagios, Zabbix...) c\u00e1c s\u1ef1 c\u00e1ch th\u1ee9c l\u1ea5y th\u00f4ng tin - Transformer Class: \u0110\u1ecbnh ngh\u0129a c\u00e1ch \u0111\u01b0a \u0111\u01b0\u1ee3c th\u00f4ng tin \u0111\u00f3 v\u00e0o \u0111\u1ed3 th\u1ecb, nh\u01b0: v\u1edbi m\u1ed7i s\u1ef1 ki\u1ec7n c\u1ea7n th\u00eam, s\u1eeda x\u00f3a c\u00e1c \u0111\u1ec9nh, c\u1ea1nh nh\u01b0 th\u1ebf n\u00e0o Khi kh\u1edfi t\u1ea1o graph, datasouce driver g\u1ecdi \"get-all\" - l\u1ea5y v\u1ec1 to\u00e0n b\u1ed9 th\u00f4ng tin h\u1ec7 th\u1ed1ng hi\u1ec7n t\u1ea1i. B\u1eb1ng c\u00e1ch t\u1ea1o c\u00e1c client g\u1ecdi \u0111\u1ebfn api c\u1ee7a m\u1ed7i service (nova, neutron,...) Defaut c\u1ee9 10 ph\u00fat, diver l\u1ea1i snapshot d\u1eef li\u1ec7u hi\u1ec7n t\u1ea1i v\u00e0 g\u1ecdi get-all m\u1ed9t l\u1ea7n Khi c\u00f3 s\u1ef1 thay \u0111\u1ed5i trong h\u1ec7 th\u1ed1ng : vd th\u00eam b\u1edbt host, c\u00f3 aodh alarm. Vitrage nh\u1eadn bi\u1ebft b\u1edfi 1 trong 2 c\u00e1ch: - polling mechanism: g\u1ecdi \u0111\u1ebfn h\u00e0m get_changes - \u0111\u1ecbnh ngh\u0129a trong Driver Class - pushing mechanism: \u0111\u1ecdc \u0111\u01b0\u1ee3c messeage t\u1eeb message queue m\u00e0 service \u0111\u00f3 g\u1eedi l\u00ean, topic \"vitrage_notifications\" ( ch\u1ec9 c\u00f3 static datasouce driver d\u00f9ng polling - t\u1ee9c s\u1ebd \u0111\u1ecdc t\u1eeb th\u01b0 m\u1ee5c- ho\u1eb7c trong database; c\u00e1c datasouce kh\u00e1c \u0111\u1ec1u s\u1eed d\u1ee5ng pushing mechaism) Xem th\u00eam v\u1ec1 c\u00e1ch vi\u1ebft 1 datasouce t\u1ea1i : https://github.com/openstack/vitrage/blob/stable/queens/doc/source/contributor/add-new-datasource.rst Vitrage graph c\u00f3 tr\u00e1ch nhi\u1ec7m: K\u1ebft n\u1ed1i v\u1edbi networkx \u0111\u1ec3 tr\u00ecnh di\u1ec5n \u0111\u1ed3 th\u1ecb cho ng\u01b0\u1eddi d\u00f9ng. \u0110\u1ed3ng th\u1eddi n\u00f3 c\u0169ng tr\u1ea3 l\u1eddi c\u00e1c truy v\u1eabn \u0111\u1ed3 th\u1ecb c\u1ee7a khi c\u00e1c th\u00e0nh ph\u1ea7n kh\u00e1c h\u1ecfi \u0111\u1ebfn (vd vitrage-evaluator g\u1ecdi khi th\u1ef1c hi\u1ec7n c\u00e1c k\u1ecbch b\u1ea3n deduce-alarm; rca)","title":"1. Ho\u1ea1t \u0111\u1ed9ng t\u1ea1o graph"},{"location":"tech_detail/vitrage/vitrage-doc/entity_graph/#cac-loai-datasouce","text":"openstack datasource: aodh, ceilometer, cinder, heat, neutron, nova. extenal monitor datasource: collectd, zabix, nagios, doctor. static datasource: \u0111\u1ecdc th\u00f4ng tin t\u1eeb c\u00e1c file c\u1ea5u h\u00ecnh ng\u01b0\u1eddi d\u00f9ng c\u1ea5p C\u00e1ch vitrage chu\u1ea9n h\u00f3a th\u00f4ng tin v\u1ec1 tr\u1ea1ng th\u00e1i c\u1ee7a c\u00e1c th\u1ef1c th\u1ec3 t\u1eeb datasouce: https://github.com/openstack/vitrage/blob/stable/queens/doc/source/contributor/alarm-severity-config.rst https://github.com/openstack/vitrage/blob/stable/queens/doc/source/contributor/resource-state-config.rst C\u00e1c openstack datasource th\u00ec ta ch\u1ec9 c\u1ea7n c\u1ea5u h\u00ecnh oslo messaging notifications v\u00e0o topic vitrage_notifications ; 2 ngu\u1ed3n c\u00f2n l\u1ea1i thi\u1ebft \u0111\u1eb7t c\u00f3 ph\u1ee9c t\u1ea1p h\u01a1n \u0111\u01b0\u1ee3c \u0111\u1ec1 c\u1eadp \u1edf d\u01b0\u1edbi \u0111\u00e2y.","title":"C\u00e1c lo\u1ea1i datasouce:"},{"location":"tech_detail/vitrage/vitrage-doc/entity_graph/#cach-cau-hinh-static-datasource","text":"M\u1ee5c \u0111\u00edch th\u00eam static datasource l\u00e0 gi\u00fap ng\u01b0\u1eddi d\u00f9ng b\u1ed5 sung v\u00e0o \u0111\u1ed3 th\u1ecb c\u00e1c th\u1ef1c th\u1ec3 ch\u01b0a qu\u1ea3n l\u00fd b\u1edfi b\u1ea5t k\u1ef3 datasouce n\u00e0o kh\u00e1c, n\u00f3 c\u00f3 th\u1ec3 m\u00f4 t\u1ea3 cho \u0111\u1ed1i t\u01b0\u1ee3ng physical, virtual ho\u1eb7c application vd: switch, route, service,... Th\u00eam v\u00e0o /etc/vitrage/vitrage.conf: [static] directory = /etc/vitrage/static_datasources/ changes_interval = 10 Trong \u0111\u00f3 directory n\u01a1i ch\u1ee9a c\u00e1c file yaml khai b\u00e1o static; changes_interval 10s cho bi\u1ebft vitrage s\u1ebd ki\u1ec3m tra thay \u0111\u1ed5i trong th\u01b0 m\u1ee5c 10s m\u1ed9t l\u1ea7n Template cho khai b\u00e1o cho static datasouce c\u00f3 d\u1ea1ng: metadata: name: name template description: description definitions: entities: - static_id: s1 type: switch id: 12345 name: switch-1 state: active ... - static_id: h1 type: nova.host id: 1 state: active purpose: CI ... relationships: - source: s1 target: h1 relationship_type: attached M\u1ee5c metadata: khai b\u00e1o th\u00f4ng tin c\u1ee7a t\u00e0i li\u1ec7u M\u1ee5c definitions: khai b\u00e1o c\u00e1c th\u1ef1c th\u1ec3 mu\u1ed1n th\u00eam v\u00e0o: - entities : danh s\u00e1ch th\u1ef1c th\u1ec3 mu\u1ed1n th\u00eam , trong \u0111\u00f3: static_id : id d\u00f9ng trong template, ph\u1ea1m vi n\u1eb1m trong 1 template, m\u1ee5c \u0111\u00edch nh\u01b0 t\u00ean vi\u1ebft g\u1ecdn type : ki\u1ec3u resource, c\u00f3 th\u1ec3 khai b\u00e1o b\u1ea5t k\u1ef3 ki\u1ec3u n\u00e0o, c\u00f3 th\u1ec3 l\u00e0 ki\u1ec3u c\u00f3 s\u1eb5n: openstack.cluster, nova.zone, nova.host, nova.instance, cinder.volume, neutron.network, neutron.port, heat.stack ; hay ki\u1ec3u ri\u00eang t\u00f9y ng\u01b0\u1eddi d\u00f9ng, vd port-switch, port-host,... id : \u0111\u1ecbnh danh, id v\u00e0 type c\u01a1 b\u1ea3n s\u1ebd l\u00e0 \u00e1nh x\u1ea1 1 ph\u1ea7n t\u1eed t\u1eeb th\u1ebf gi\u1edbi th\u1ef1c v\u00e0o graph name : t\u00ean resource state : gi\u00e1 tr\u1ecb t\u00f9y ch\u1ecdn, n\u1ebfu l\u00e0 resource \u0111\u00e3 c\u00f3 s\u1eb5n trong \u0111\u1ed3 th\u1ecb ta kh\u00f4ng c\u1ea7n khai b\u00e1o v\u00e0o. Nh\u01b0ng n\u1ebfu \u0111\u00e2y l\u1ea7n \u0111\u1ea7u resource th\u00eam v\u00e0o th\u00ec bu\u1ed9c ph\u1ea3i c\u00f3, th\u01b0\u1eddng \u0111\u1ec3 gi\u00e1 tr\u1ecb l\u00e0 active ho\u1eb7c avalable - relationships : quan h\u1ec7 gi\u1eefa c\u00e1c th\u1ef1c th\u1ec3 : source , target : static id c\u1ee7a th\u1ef1c th\u1ec3 ngu\u1ed3n, \u0111\u00edch relationship_type : c\u00f3 th\u1ec3 nh\u1eadn b\u1ea5t k\u1ef3 gi\u00e1 tr\u1ecb n\u00e0o. Th\u1ec3 hi\u1ec7n m\u1ed1i quan h\u1ec7 2 th\u1ef1c th\u1ec3 (hay nh\u00e3n c\u1ee7a c\u1ea1nh n\u1ed1i 2 \u0111\u1ec9nh Tuy nhi\u00ean \u0111\u1ec3 v\u1ec1 sau vi\u1ebft template cho ch\u00ednh x\u00e1c, relationship_type th\u01b0\u1eddng li\u00ean quan \u0111\u1ebfn type c\u1ee7a source v\u00e0 target. D\u01b0\u1edbi \u0111\u00e2y l\u00e0 c\u00e1c quan h\u1ec7 \u0111\u01b0\u1ee3c quy \u01b0\u1edbc ng\u1ea7m c\u1ee7a c\u00e1c datasoucre s\u1eb5n c\u00f3 c\u1ee7a vitrage: - 'on' : aodh (alarm) on nova.instance. - 'contains' : openstack.cluster contains nova.zone ; nova.zone contains nova.host ; nova.host contains nova.instance ; neutron.network contains neutron.port - 'attached' : nova.instance attached cinder.volume ; nova.instance attached neutron.port - 'comprised': heat.stack comprised nova.instance ; heat.stack comprised cinder.volume ; heat.stack comprised neutron.network ; heat.stack comprised neutron.port \u0110\u1ec3 m\u00f4 t\u1ea3 c\u00e1c entity v\u1eadt l\u00fd : hi\u1ec7n c\u00f3 switch, port switch, port host, em c\u00f3 khai b\u00e1o trong c\u00e1c file static datasource config c\u00e1c type entity: - switch : t\u01b0\u01a1ng \u1ee9ng v\u1edbi switch - port_switch: port g\u1eafn v\u1edbi switch - port_host : port v\u1eadt l\u00fd g\u1eafn v\u1edbi host - port_ovs : port virtual t\u1ea1o v\u1edbi ovs M\u1ed9t s\u1ed1 relationship_type em \u0111\u1eb7t t\u01b0\u01a1ng \u1ee9ng cho c\u00e1c static entity khi tr\u00ean: - 'attached' : port_switch attached switch ; port_host attached nova.host ; port_ovs attached neutron.network - 'connect' : port_switch connect port_host ; port_host connect port_ovs (vi\u1ec7c t\u00e1ch bi\u1ec7t t\u1eebng lo\u1ea1i port nh\u01b0 v\u1eady th\u1ea5y s\u1ebd c\u00f3 l\u1ee3i tr\u00e1nh nh\u1eadp nh\u1eb1ng khi vi\u1ebft template sau n\u00e0y) V\u00ed d\u1ee5 add static cho m\u00f4 h\u00ecnh nh\u01b0 h\u00ecnh v\u1ebd \u0111\u1ea7u b\u00e0i vi\u1ebft: cluster c\u00f3 2 host, \u0111\u01b0\u1ee3c g\u1eafn v\u00e0o c\u00f9ng switch tr\u00ean port enp4s0f0 , \u0111\u1ed3ng th\u1eddi m\u1ed7i port n\u00e0y \u0111\u1ec1u k\u1ebft n\u1ed1i vitrual port br-provider : Ta c\u1ea5u static datasource nh\u01b0 sau: Th\u00eam file /etc/vitrage/static_datasources/port_host-controller.yaml : th\u00eam static c\u00e1c port c\u1ee7a host 1 Th\u00eam file /etc/vitrage/static_datasources/port_host-compute02.yaml : th\u00eam static c\u00e1c port c\u1ee7a host 2 Th\u00eam file /etc/vitrage/static_datasources/port_switch-01.yaml : th\u00eam static c\u00e1c port c\u1ee7a switch Th\u00eam file /etc/vitrage/static_datasources/connect_port.yaml : bi\u1ec3u th\u1ecb m\u1ed1i quan h\u1ec7 k\u1ebft n\u1ed1i c\u1ee7a c\u00e1c port host v\u00e0o port switch","title":"C\u00e1ch c\u1ea5u h\u00ecnh static datasource:"},{"location":"tech_detail/vitrage/vitrage-doc/entity_graph/#cach-cau-hinh-zabbix-datasouce","text":"M\u1ee5c \u0111\u00edch l\u00e0 gi\u00fap vitrage c\u00f3 \u0111\u01b0\u1ee3c c\u00e1c th\u00f4ng tin monitor t\u1eeb c\u00e1c ngu\u1ed3n physical: port, host t\u1eeb ngu\u1ed3n external datasource (zabbix) mang v\u1ec1 C\u00e0i \u0111\u1eb7t zabbix : https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-zabbix-to-securely-monitor-remote-servers-on-ubuntu-16-04 C\u1ea5u h\u00ecnh mapping c\u00e1c alarm t\u1ea1i th\u1ef1c th\u1ec3 v\u1eadt l\u00fd c\u1ee7a zabbix v\u00e0o th\u1ef1c th\u1ec3 tr\u00ean graph: 1.Thi\u1ebft l\u1eadp monior port tr\u00ean zabbix: C\u1ea5u h\u00ecnh zabbix \u0111\u1ec3 ph\u00e1t hi\u1ec7n m\u1ed9t port c\u1ee7a switch down C\u1ea5u h\u00ecnh zabbix \u0111\u1ec3 ph\u00e1t hi\u1ec7n m\u1ed9t port c\u1ee7a host down (m\u1ed7i port c\u1ee7a switch c\u1ea5u h\u00ecnh t\u01b0\u01a1ng \u1ee9ng 1 zabbix host, m\u1ed7i port c\u1ee7a host c\u0169ng c\u1ea5u h\u00ecnh th\u00e0nh 1 zabbix host) 2. C\u1ea5u h\u00ecnh \u0111\u1ec3 khi triger zabbix b\u1eadt l\u00ean s\u1ebd g\u1eedi c\u1ea3nh b\u00e1o v\u1ec1 vitrage ( g\u1eedi v\u00e0o rabbitmq) Ref: https://docs.openstack.org/vitrage/latest/contributor/zabbix_vitrage.html 3/Thi\u1ebft l\u1eadp t\u1ea1i vitrage Th\u00eam v\u00e0o file /etc/vitrage/vitrage.conf: ``` [datasources] snapshots_interval = 300","title":"C\u00e1ch c\u1ea5u h\u00ecnh zabbix datasouce:"},{"location":"tech_detail/vitrage/vitrage-doc/entity_graph/#names-of-supported-plugins-list-value","text":"types = zabbix,nova.host,nova.instance,nova.zone,static,aodh,cinder.volume,neutron.network,neutron.port,heat.stack [zabbix] url = http:// /zabbix password = zabbix user = admin config_file = /etc/vitrage/zabbix_conf.yaml ``` Mapping c\u00e1c th\u1ef1c th\u1ec3 c\u1ee7a zabbix qu\u1ea3n l\u00fd v\u00e0o c\u00e1c static resource entity vitrage \u0111\u00e3 c\u1ea5u h\u00ecnh . Vd: theo nh\u01b0 m\u00f4 h\u00ecnh nh\u01b0 tr\u00ean h\u00ecnh , ta mapping c\u00e1c port c\u1ee7a host, switch zabbix monitor v\u00e0o c\u00e1c static datasource . T\u1ea1i zabbix \u0111\u00e3 t\u1ea1o \u0111\u1ee7 c\u00e1c host: Th\u00eam file zabbix_conf.yaml: ``` cat /etc/vitrage/zabbix_conf.yaml zabbix: - zabbix_host: controller port enp4s0f0 type: port name: controller-port-enp4s0f0 - zabbix_host: compute02 port enp4s0f0 type: port name: compute02-port-enp4s0f0 - zabbix_host: Interface Gi1-0-21 type: port name: switch-port-g-1-0-21 - zabbix_host: Interface Gi1-0-20 type: port name: switch-port-g-1-0-20 - zabbix_host: Interface Gi1-0-22 type: port name: switch-port-g-1-0-22 ```","title":"Names of supported plugins (list value)"},{"location":"tech_detail/vitrage/vitrage-doc/entity_graph/#mot-so-loi-a-gap","text":"","title":"M\u1ed9t s\u1ed1 l\u1ed7i \u0111\u00e3 g\u1eb7p"},{"location":"tech_detail/vitrage/vitrage-doc/entity_graph/#ref","text":"https://docs.openstack.org/vitrage/latest/contributor/static-config.html https://docs.openstack.org/vitrage/latest/contributor/add-new-datasource.html https://docs.openstack.org/vitrage/latest/contributor/configuration.html","title":"Ref"},{"location":"tech_detail/vitrage/vitrage-doc/install/","text":"H\u01b0\u1edbng d\u1eabn c\u00e0i \u0111\u1eb7t vitrage: \u2534 Khuy\u00ean n\u00ean d\u00f9ng vitrage version queen. C\u00e0i tr\u00ean devstack: \u2534 Tu\u00e2n theo c\u00e1c h\u01b0\u1edbng d\u1eabn c\u01a1 b\u1ea3n t\u1ea1i https://docs.openstack.org/devstack/latest/ File local.conf: [[local|localrc]] GIT_BASE=http://github.com HOST_IP=192.168.2.54 ADMIN_PASSWORD=secret DATABASE_PASSWORD=$ADMIN_PASSWORD RABBIT_PASSWORD=$ADMIN_PASSWORD SERVICE_PASSWORD=$ADMIN_PASSWORD MULTI_HOST=True enable_plugin vitrage https://git.openstack.org/openstack/vitrage stable/queens enable_plugin vitrage-dashboard https://git.openstack.org/openstack/vitrage-dashboard stable/queens enable_plugin heat https://git.openstack.org/openstack/heat stable/queens enable_plugin ceilometer https://git.openstack.org/openstack/ceilometer stable/queens enable_plugin aodh https://git.openstack.org/openstack/aodh stable/queens [[post-config|$NOVA_CONF]] [DEFAULT] notification_topics = notifications,vitrage_notifications notification_driver=messagingv2 [notifications] versioned_notifications_topics = versioned_notifications,vitrage_notifications notification_driver = messagingv2 [[post-config|$NEUTRON_CONF]] [DEFAULT] notification_topics = notifications,vitrage_notifications notification_driver=messagingv2 [[post-config|$CINDER_CONF]] [DEFAULT] notification_topics = notifications,vitrage_notifications notification_driver=messagingv2 [[post-config|$HEAT_CONF]] [DEFAULT] notification_topics = notifications,vitrage_notifications notification_driver=messagingv2 [[post-config|$AODH_CONF]] [oslo_messaging_notifications] driver = messagingv2 topics = notifications,vitrage_notifications C\u00e0i tr\u00ean openstack \u2534 chu\u1ea9n b\u1ecb cho keystone-endpoint, database: \u2534 T\u1ea1i keystone ch\u1ea1y c\u00e1c l\u1ec7nh \u0111\u1ec3 t\u1ea1o user, serivce, endpoint openstack user create vitrage --password Welcome123 --domain=Default openstack role add admin --user vitrage --project service openstack role add admin --user vitrage --project admin openstack service create rca --name vitrage --description= Root Cause Analysis Service openstack endpoint create --region RegionOne metric public http://controller:8041 openstack endpoint create --region RegionOne rca public http://controller:8999 openstack endpoint create --region RegionOne vitrage internal http://controller:8999 openstack endpoint create --region RegionOne vitrage admin http://controller:8999 T\u1ea1i mysql t\u1ea1o vitrage database: mysql -u root -p CREATE DATABASE vitrage; GRANT ALL PRIVILEGES ON vitrage.* TO 'vitrage'@'localhost' \\ IDENTIFIED BY 'Welcome123'; GRANT ALL PRIVILEGES ON vitrage.* TO 'vitrage'@'%' \\ IDENTIFIED BY 'Welcome123'; c\u00e0i vitrage-core \u2534 C\u00e0i c\u00e1c g\u00f3i wget http://tarballs.openstack.org/vitrage/vitrage-stable-queens.tar.gz tar xvzf vitrage-stable-queens.tar.gz cd vitrage-2.3.1.dev3/ pip install -r requirements.txt python setup.py install T\u1ea1o th\u01b0 m\u1ee5c conf cd vitrage-2.3.1.dev3/ cp -r etc/vitrage /etc/ mkdir /etc/vitrage/static_datasources chmod 755 /etc/vitrage/static_datasources mkdir /var/log/vitrage T\u1ea1o file conf /etc/vitrage/vitrage.conf n\u1ed9i dung : [DEFAULT] transport_url = rabbit://openstack:Welcome123@controller:5672/ log_dir = /var/log/vitrage debug = false [datasources] types = zabbix,nova.host,nova.instance,nova.zone,static,neutron.network,neutron.port,heat.stack,doctor [keystone_authtoken] region_name = RegionOne www_authenticate_uri = http://conroller:5000 auth_uri = http://controller:5000 auth_url = http://controller:35357 memcached_servers = controller:11211 auth_type = password project_domain_id = default user_domain_id = default project_name = service username = vitrage password = Welcome123 project_domain_id = default user_domain_id = default [database] connection = mysql+pymysql://vitrage:Welcome123@controller/vitrage [service_credentials] auth_url = http://controller:5000/v3 auth_type = password auth_version = v3 region_name = RegionOne project_domain_id = default user_domain_id = default project_name = admin username = vitrage password = Welcome123 interface = internal memcached_servers = controller:11211 [oslo_messaging_notifications] driver = messagingv2 topics = notifications,vitrage_notifications ( s\u1eeda c\u00e1c ph\u1ea7n authen cho ph\u00f9 h\u1ee3p h\u1ec7 th\u1ed1ng c\u1ee5 th\u1ec3) c\u00e0i vitrage-drashboard \u2534 C\u00e0i c\u00e1c g\u00f3i: wget http://tarballs.openstack.org/vitrage-dashboard/vitrage-dashboard-stable-queens.tar.gz tar xvzf vitrage-dashboard-stable-queens.tar.gz cd vitrage-dashboard-1.4.3.dev1/ pip install -r requirements.txt python setup.py install cp enabled/* /usr/share/openstack-dashboard/openstack_dashboard/local/enabled/ ( g\u00f3i /usr/share/openstack-dashboard c\u00f3 th\u1ec3 c\u00f3 \u0111\u1ecba ch\u1ec9 kh\u00e1c bi\u1ec7t t\u00f9y h\u1ec7 th\u1ed1ng) - compress horion sudo python /usr/share/openstack-dashboard/manage.py compress sudo python /usr/share/openstack-dashboard/manage.py collectstatic --noinput sudo service apache2 restart c\u00e0i vitrage-cli-client (python_vitrageclient) \u2534 pip install python_vitrageclient==2.1.0 Thi\u1ebft \u0111\u1eb7t cho c\u00e1c serivice kh\u00e1c \u2534 vitrage l\u1ea5y th\u00f4ng tin datasouce t\u1eeb rabbitmq topic . thay \u0111\u1ed5i trong aodh.conf, nova.conf, neutron.conf, cinder.conf, heat.conf: [oslo_messaging_notifications] driver = messagingv2 topics = notifications,vitrage_notifications restart c\u00e1c d\u1ecbch v\u1ee5 n\u00e0y Kh\u1edfi ch\u1ea1y: \u2534 T\u1ea1o database: vitrage-dbsync --config-file /etc/vitrage/vitrage.conf Ch\u1ea1y c\u00e1c d\u1ecbch v\u1ee5: vitrage-collector --config-file /etc/vitrage/vitrage.conf vitrage-graph --config-file /etc/vitrage/vitrage.conf vitrage-api --config-file /etc/vitrage/vitrage.conf vitrage-notifier --config-file /etc/vitrage/vitrage.conf vitrage-persistor --config-file /etc/vitrage/vitrage.conf Ki\u1ec3m tra ho\u1ea1t \u0111\u1ed9ng: m\u1ed9t s\u1ed1 l\u1ec7nh ch\u1ea1y \u2534 vitrage alarm list : show all existing alarm vitrage resource list : show all existing resource of nova, neutron, cinder, aodh,... which you configued vitrage resource show a_specificed_resource_vitrage_ID : show information about specificed resource M\u1ed9t s\u1ed1 l\u1ed7i khi c\u00e0i \u0111\u1eb7t \u0111\u00e3 g\u1eb7p: \u2534 Khi kh\u1edfi t\u1ea1o data, g\u1eb7p l\u1ed7i b\u00e1o: DBError: (pymysql.err.InternalError) (1075, u'Incorrect table definition; there can be only one auto column and it must be defined as a key') Nguy\u00ean nh\u00e2n: k\u1ecbch b\u1ea3n t\u1ea1o database c\u1ee7a vitrage l\u1ed7i. Transaction trong k\u1ecbch b\u1ea3n n\u00e0y b\u1ecb t\u1eeb ch\u1ed1i b\u1edfi mysql storage engine Kh\u1eafc ph\u1ee5c : s\u1eeda defaut storage engine t\u1eeb InnoDB v\u1ec1 MyISAM https://stackoverflow.com/questions/6479655/how-do-i-set-myisam-as-default-table-handler-in-mysql Ref \u2534 https://docs.openstack.org/vitrage/latest/install/install-rdo.html#manual","title":"Install"},{"location":"tech_detail/vitrage/vitrage-doc/install/#huong-dan-cai-at-vitrage","text":"Khuy\u00ean n\u00ean d\u00f9ng vitrage version queen.","title":"H\u01b0\u1edbng d\u1eabn c\u00e0i \u0111\u1eb7t vitrage:"},{"location":"tech_detail/vitrage/vitrage-doc/install/#cai-tren-devstack","text":"Tu\u00e2n theo c\u00e1c h\u01b0\u1edbng d\u1eabn c\u01a1 b\u1ea3n t\u1ea1i https://docs.openstack.org/devstack/latest/ File local.conf: [[local|localrc]] GIT_BASE=http://github.com HOST_IP=192.168.2.54 ADMIN_PASSWORD=secret DATABASE_PASSWORD=$ADMIN_PASSWORD RABBIT_PASSWORD=$ADMIN_PASSWORD SERVICE_PASSWORD=$ADMIN_PASSWORD MULTI_HOST=True enable_plugin vitrage https://git.openstack.org/openstack/vitrage stable/queens enable_plugin vitrage-dashboard https://git.openstack.org/openstack/vitrage-dashboard stable/queens enable_plugin heat https://git.openstack.org/openstack/heat stable/queens enable_plugin ceilometer https://git.openstack.org/openstack/ceilometer stable/queens enable_plugin aodh https://git.openstack.org/openstack/aodh stable/queens [[post-config|$NOVA_CONF]] [DEFAULT] notification_topics = notifications,vitrage_notifications notification_driver=messagingv2 [notifications] versioned_notifications_topics = versioned_notifications,vitrage_notifications notification_driver = messagingv2 [[post-config|$NEUTRON_CONF]] [DEFAULT] notification_topics = notifications,vitrage_notifications notification_driver=messagingv2 [[post-config|$CINDER_CONF]] [DEFAULT] notification_topics = notifications,vitrage_notifications notification_driver=messagingv2 [[post-config|$HEAT_CONF]] [DEFAULT] notification_topics = notifications,vitrage_notifications notification_driver=messagingv2 [[post-config|$AODH_CONF]] [oslo_messaging_notifications] driver = messagingv2 topics = notifications,vitrage_notifications","title":"C\u00e0i tr\u00ean devstack:"},{"location":"tech_detail/vitrage/vitrage-doc/install/#cai-tren-openstack","text":"","title":"C\u00e0i tr\u00ean openstack"},{"location":"tech_detail/vitrage/vitrage-doc/install/#chuan-bi-cho-keystone-endpoint-database","text":"T\u1ea1i keystone ch\u1ea1y c\u00e1c l\u1ec7nh \u0111\u1ec3 t\u1ea1o user, serivce, endpoint openstack user create vitrage --password Welcome123 --domain=Default openstack role add admin --user vitrage --project service openstack role add admin --user vitrage --project admin openstack service create rca --name vitrage --description= Root Cause Analysis Service openstack endpoint create --region RegionOne metric public http://controller:8041 openstack endpoint create --region RegionOne rca public http://controller:8999 openstack endpoint create --region RegionOne vitrage internal http://controller:8999 openstack endpoint create --region RegionOne vitrage admin http://controller:8999 T\u1ea1i mysql t\u1ea1o vitrage database: mysql -u root -p CREATE DATABASE vitrage; GRANT ALL PRIVILEGES ON vitrage.* TO 'vitrage'@'localhost' \\ IDENTIFIED BY 'Welcome123'; GRANT ALL PRIVILEGES ON vitrage.* TO 'vitrage'@'%' \\ IDENTIFIED BY 'Welcome123';","title":"chu\u1ea9n b\u1ecb cho keystone-endpoint, database:"},{"location":"tech_detail/vitrage/vitrage-doc/install/#cai-vitrage-core","text":"C\u00e0i c\u00e1c g\u00f3i wget http://tarballs.openstack.org/vitrage/vitrage-stable-queens.tar.gz tar xvzf vitrage-stable-queens.tar.gz cd vitrage-2.3.1.dev3/ pip install -r requirements.txt python setup.py install T\u1ea1o th\u01b0 m\u1ee5c conf cd vitrage-2.3.1.dev3/ cp -r etc/vitrage /etc/ mkdir /etc/vitrage/static_datasources chmod 755 /etc/vitrage/static_datasources mkdir /var/log/vitrage T\u1ea1o file conf /etc/vitrage/vitrage.conf n\u1ed9i dung : [DEFAULT] transport_url = rabbit://openstack:Welcome123@controller:5672/ log_dir = /var/log/vitrage debug = false [datasources] types = zabbix,nova.host,nova.instance,nova.zone,static,neutron.network,neutron.port,heat.stack,doctor [keystone_authtoken] region_name = RegionOne www_authenticate_uri = http://conroller:5000 auth_uri = http://controller:5000 auth_url = http://controller:35357 memcached_servers = controller:11211 auth_type = password project_domain_id = default user_domain_id = default project_name = service username = vitrage password = Welcome123 project_domain_id = default user_domain_id = default [database] connection = mysql+pymysql://vitrage:Welcome123@controller/vitrage [service_credentials] auth_url = http://controller:5000/v3 auth_type = password auth_version = v3 region_name = RegionOne project_domain_id = default user_domain_id = default project_name = admin username = vitrage password = Welcome123 interface = internal memcached_servers = controller:11211 [oslo_messaging_notifications] driver = messagingv2 topics = notifications,vitrage_notifications ( s\u1eeda c\u00e1c ph\u1ea7n authen cho ph\u00f9 h\u1ee3p h\u1ec7 th\u1ed1ng c\u1ee5 th\u1ec3)","title":"c\u00e0i vitrage-core"},{"location":"tech_detail/vitrage/vitrage-doc/install/#cai-vitrage-drashboard","text":"C\u00e0i c\u00e1c g\u00f3i: wget http://tarballs.openstack.org/vitrage-dashboard/vitrage-dashboard-stable-queens.tar.gz tar xvzf vitrage-dashboard-stable-queens.tar.gz cd vitrage-dashboard-1.4.3.dev1/ pip install -r requirements.txt python setup.py install cp enabled/* /usr/share/openstack-dashboard/openstack_dashboard/local/enabled/ ( g\u00f3i /usr/share/openstack-dashboard c\u00f3 th\u1ec3 c\u00f3 \u0111\u1ecba ch\u1ec9 kh\u00e1c bi\u1ec7t t\u00f9y h\u1ec7 th\u1ed1ng) - compress horion sudo python /usr/share/openstack-dashboard/manage.py compress sudo python /usr/share/openstack-dashboard/manage.py collectstatic --noinput sudo service apache2 restart","title":"c\u00e0i vitrage-drashboard"},{"location":"tech_detail/vitrage/vitrage-doc/install/#cai-vitrage-cli-client-python_vitrageclient","text":"pip install python_vitrageclient==2.1.0","title":"c\u00e0i vitrage-cli-client (python_vitrageclient)"},{"location":"tech_detail/vitrage/vitrage-doc/install/#thiet-at-cho-cac-serivice-khac","text":"vitrage l\u1ea5y th\u00f4ng tin datasouce t\u1eeb rabbitmq topic . thay \u0111\u1ed5i trong aodh.conf, nova.conf, neutron.conf, cinder.conf, heat.conf: [oslo_messaging_notifications] driver = messagingv2 topics = notifications,vitrage_notifications restart c\u00e1c d\u1ecbch v\u1ee5 n\u00e0y","title":"Thi\u1ebft \u0111\u1eb7t cho c\u00e1c serivice kh\u00e1c"},{"location":"tech_detail/vitrage/vitrage-doc/install/#khoi-chay","text":"T\u1ea1o database: vitrage-dbsync --config-file /etc/vitrage/vitrage.conf Ch\u1ea1y c\u00e1c d\u1ecbch v\u1ee5: vitrage-collector --config-file /etc/vitrage/vitrage.conf vitrage-graph --config-file /etc/vitrage/vitrage.conf vitrage-api --config-file /etc/vitrage/vitrage.conf vitrage-notifier --config-file /etc/vitrage/vitrage.conf vitrage-persistor --config-file /etc/vitrage/vitrage.conf","title":"Kh\u1edfi ch\u1ea1y:"},{"location":"tech_detail/vitrage/vitrage-doc/install/#kiem-tra-hoat-ong-mot-so-lenh-chay","text":"vitrage alarm list : show all existing alarm vitrage resource list : show all existing resource of nova, neutron, cinder, aodh,... which you configued vitrage resource show a_specificed_resource_vitrage_ID : show information about specificed resource","title":"Ki\u1ec3m tra ho\u1ea1t \u0111\u1ed9ng: m\u1ed9t s\u1ed1 l\u1ec7nh ch\u1ea1y"},{"location":"tech_detail/vitrage/vitrage-doc/install/#mot-so-loi-khi-cai-at-a-gap","text":"Khi kh\u1edfi t\u1ea1o data, g\u1eb7p l\u1ed7i b\u00e1o: DBError: (pymysql.err.InternalError) (1075, u'Incorrect table definition; there can be only one auto column and it must be defined as a key') Nguy\u00ean nh\u00e2n: k\u1ecbch b\u1ea3n t\u1ea1o database c\u1ee7a vitrage l\u1ed7i. Transaction trong k\u1ecbch b\u1ea3n n\u00e0y b\u1ecb t\u1eeb ch\u1ed1i b\u1edfi mysql storage engine Kh\u1eafc ph\u1ee5c : s\u1eeda defaut storage engine t\u1eeb InnoDB v\u1ec1 MyISAM https://stackoverflow.com/questions/6479655/how-do-i-set-myisam-as-default-table-handler-in-mysql","title":"M\u1ed9t s\u1ed1 l\u1ed7i khi c\u00e0i \u0111\u1eb7t \u0111\u00e3 g\u1eb7p:"},{"location":"tech_detail/vitrage/vitrage-doc/install/#ref","text":"https://docs.openstack.org/vitrage/latest/install/install-rdo.html#manual","title":"Ref"},{"location":"tech_detail/vitrage/vitrage-doc/zabbix_conf/config_zabbix_media/","text":"C\u1ea5u h\u00ecnh \u0111\u1ec3 khi triger zabbix b\u1eadt l\u00ean s\u1ebd g\u1eedi c\u1ea3nh b\u00e1o v\u1ec1 vitrage ( g\u1eedi v\u00e0o rabbitmq) \u2534 Th\u00eam media type: media m\u00e0 s\u1ebd th\u00f4ng b\u00e1o v\u00e0o messeage queue c\u1ee7a openstack , topic vitrage_notification \u0110\u00e2y l\u00e0 d\u1ea1ng media s\u1ebd th\u1ef1c hi\u1ec7n ch\u1ea1y script , ta dowload script v\u1ec1 , \u0111\u01b0a v\u00e0o th\u01b0 m\u1ee5c /usr/lib/zabbix/alertscripts/ $ wget https://raw.githubusercontent.com/openstack/vitrage/master/vitrage/datasources/zabbix/auxiliary/zabbix_vitrage.py $ cp zabbix_vitrage.py /usr/lib/zabbix/alertscripts/ $ chmod 755 /usr/lib/zabbix/alertscripts/zabbix_vitrage.py T\u1eeb zabbix ui : [Administration Media Types Create Media Type] Name: Vitrage Notifications Type: Script Script name: zabbix_vitrage.py Script parameters: 1st line: {ALERT.SENDTO} 2nd line: {ALERT.SUBJECT} 3rd line: {ALERT.MESSAGE} Add media-type n\u00e0y cho admin user [Administration Users] Type: Vitrage Notifications Send to: rabbit://rabbit_user:rabbit_pass@10.60.117.159:5672/ \u2014 Vitrage message bus url When active: 1-7,00:00-24:00 Use if severity: tick all options Status: Enabled - Th\u00eam action cho c\u00e1c trigger: [Configuration Actions Create Action Action] Name: Forward to Vitrage Default Subject: {TRIGGER.STATUS} Add an operation: Send to Users: Admin Send only to: Vitrage Notifications Default Message: host={HOST.NAME1} hostid={HOST.ID1} hostip={HOST.IP1} triggerid={TRIGGER.ID} description={TRIGGER.NAME} rawtext={TRIGGER.NAME.ORIG} expression={TRIGGER.EXPRESSION} value={TRIGGER.VALUE} priority={TRIGGER.NSEVERITY} lastchange={EVENT.DATE} {EVENT.TIME} To send events add under the Conditions tab: (A) Maintenance status not in maintenance Ref: \u2534 https://github.com/openstack/vitrage/blob/master/doc/source/contributor/zabbix_vitrage.rst","title":"Config zabbix media"},{"location":"tech_detail/vitrage/vitrage-doc/zabbix_conf/config_zabbix_media/#cau-hinh-e-khi-triger-zabbix-bat-len-se-gui-canh-bao-ve-vitrage-gui-vao-rabbitmq","text":"Th\u00eam media type: media m\u00e0 s\u1ebd th\u00f4ng b\u00e1o v\u00e0o messeage queue c\u1ee7a openstack , topic vitrage_notification \u0110\u00e2y l\u00e0 d\u1ea1ng media s\u1ebd th\u1ef1c hi\u1ec7n ch\u1ea1y script , ta dowload script v\u1ec1 , \u0111\u01b0a v\u00e0o th\u01b0 m\u1ee5c /usr/lib/zabbix/alertscripts/ $ wget https://raw.githubusercontent.com/openstack/vitrage/master/vitrage/datasources/zabbix/auxiliary/zabbix_vitrage.py $ cp zabbix_vitrage.py /usr/lib/zabbix/alertscripts/ $ chmod 755 /usr/lib/zabbix/alertscripts/zabbix_vitrage.py T\u1eeb zabbix ui : [Administration Media Types Create Media Type] Name: Vitrage Notifications Type: Script Script name: zabbix_vitrage.py Script parameters: 1st line: {ALERT.SENDTO} 2nd line: {ALERT.SUBJECT} 3rd line: {ALERT.MESSAGE} Add media-type n\u00e0y cho admin user [Administration Users] Type: Vitrage Notifications Send to: rabbit://rabbit_user:rabbit_pass@10.60.117.159:5672/ \u2014 Vitrage message bus url When active: 1-7,00:00-24:00 Use if severity: tick all options Status: Enabled - Th\u00eam action cho c\u00e1c trigger: [Configuration Actions Create Action Action] Name: Forward to Vitrage Default Subject: {TRIGGER.STATUS} Add an operation: Send to Users: Admin Send only to: Vitrage Notifications Default Message: host={HOST.NAME1} hostid={HOST.ID1} hostip={HOST.IP1} triggerid={TRIGGER.ID} description={TRIGGER.NAME} rawtext={TRIGGER.NAME.ORIG} expression={TRIGGER.EXPRESSION} value={TRIGGER.VALUE} priority={TRIGGER.NSEVERITY} lastchange={EVENT.DATE} {EVENT.TIME} To send events add under the Conditions tab: (A) Maintenance status not in maintenance","title":"C\u1ea5u h\u00ecnh \u0111\u1ec3 khi triger zabbix b\u1eadt l\u00ean s\u1ebd g\u1eedi c\u1ea3nh b\u00e1o v\u1ec1 vitrage ( g\u1eedi v\u00e0o rabbitmq)"},{"location":"tech_detail/vitrage/vitrage-doc/zabbix_conf/config_zabbix_media/#ref","text":"https://github.com/openstack/vitrage/blob/master/doc/source/contributor/zabbix_vitrage.rst","title":"Ref:"},{"location":"tech_detail/vitrage/vitrage-doc/zabbix_conf/discover_host_interface_down/","text":"C\u1ea5u h\u00ecnh zabbix \u0111\u1ec3 nh\u1eadn c\u1ea3nh b\u00e1o v\u1ec1 1 interface c\u1ee7a host down: \u2534 Th\u00eam file tr\u00ean m\u1ed7i host ch\u1ea1y zabbix agent: cat /etc/zabbix/zabbix_agentd.d/userparameter_niclink.conf EOF UserParameter=net.if.link[*], if [ $(cat /sys/class/net/$1/operstate) = up ]; then cat /sys/class/net/$1/carrier; else echo 0 ; fi; EOF service zabbix-agent restart 2.T\u1ea1i zabbix UI, th\u00eam host : v\u00e0o Configuration host create host 3.T\u1ea1i Zabbix UI, t\u1ea1o item c\u1ee7a host v\u1eeda t\u1ea1o : Type: Zabbix agent Key: net.if.link[*] thay * b\u1eb1ng t\u00ean port c\u1ea7n monitor , vd net.if.link[enp4s0f0] Type of information: Numeric (unsigned); Data type: Decimal Show Value: as \"Service state\" (displays them as \"Up/Down\") Application: Network Interfaces 4.T\u1ea1o triger: Name: interface down Severity: High Expression: {controller_port_enp4s0f0:net.if.link[enp4s0f0].last()}=0 v\u1edbi controller_port_enp4s0f0:net.if.link[enp4s0f0] l\u00e0 item th\u00eam \u1edf tr\u00ean . b\u1eadt trigger khi gi\u00e1 tr\u1ecb b\u1eb1ng 0","title":"Discover host interface down"},{"location":"tech_detail/vitrage/vitrage-doc/zabbix_conf/discover_host_interface_down/#cau-hinh-zabbix-e-nhan-canh-bao-ve-1-interface-cua-host-down","text":"Th\u00eam file tr\u00ean m\u1ed7i host ch\u1ea1y zabbix agent: cat /etc/zabbix/zabbix_agentd.d/userparameter_niclink.conf EOF UserParameter=net.if.link[*], if [ $(cat /sys/class/net/$1/operstate) = up ]; then cat /sys/class/net/$1/carrier; else echo 0 ; fi; EOF service zabbix-agent restart 2.T\u1ea1i zabbix UI, th\u00eam host : v\u00e0o Configuration host create host 3.T\u1ea1i Zabbix UI, t\u1ea1o item c\u1ee7a host v\u1eeda t\u1ea1o : Type: Zabbix agent Key: net.if.link[*] thay * b\u1eb1ng t\u00ean port c\u1ea7n monitor , vd net.if.link[enp4s0f0] Type of information: Numeric (unsigned); Data type: Decimal Show Value: as \"Service state\" (displays them as \"Up/Down\") Application: Network Interfaces 4.T\u1ea1o triger: Name: interface down Severity: High Expression: {controller_port_enp4s0f0:net.if.link[enp4s0f0].last()}=0 v\u1edbi controller_port_enp4s0f0:net.if.link[enp4s0f0] l\u00e0 item th\u00eam \u1edf tr\u00ean . b\u1eadt trigger khi gi\u00e1 tr\u1ecb b\u1eb1ng 0","title":"C\u1ea5u h\u00ecnh zabbix \u0111\u1ec3 nh\u1eadn c\u1ea3nh b\u00e1o v\u1ec1 1 interface c\u1ee7a host down:"},{"location":"tech_detail/vitrage/vitrage-doc/zabbix_conf/discover_switch_interface_down/","text":"C\u1ea5u h\u00ecnh zabbix \u0111\u1ec3 nh\u1eadn c\u1ea3nh b\u00e1o v\u1ec1 1 interface c\u1ee7a switch down: \u2534 1.T\u1ea1i zabbix UI, th\u00eam host : v\u00e0o Configuration host create host Th\u00f4ng tin c\u01a1 b\u1ea3n Thi\u1ebft l\u1eadp SNMP_COMMUNITY t\u1ea1i tab Macros 2.T\u1ea1o item c\u1ee7a host v\u1eeda t\u1ea1o : Type: SNMP2 agent Key: net.if.status[ifOperStatus.*] thay * b\u1eb1ng t\u00ean oid port c\u1ea7n monitor , vd net.if.status[ifOperStatus.10121] Type of information: Numeric (unsigned); Data type: Decimal Show Value: IF-MIB::ifOperStatus Application: Network Interfaces 4.T\u1ea1o trigger: Name: interface down Severity: High Expression: {Interface Gi1-0-21:net.if.status[ifOperStatus.10121].last()}=2 v\u1edbi Interface Gi1-0-21:net.if.status[ifOperStatus.10121] l\u00e0 item th\u00eam \u1edf tr\u00ean . b\u1eadt trigger khi gi\u00e1 tr\u1ecb b\u1eb1ng 2","title":"Discover switch interface down"},{"location":"tech_detail/vitrage/vitrage-doc/zabbix_conf/discover_switch_interface_down/#cau-hinh-zabbix-e-nhan-canh-bao-ve-1-interface-cua-switch-down","text":"1.T\u1ea1i zabbix UI, th\u00eam host : v\u00e0o Configuration host create host Th\u00f4ng tin c\u01a1 b\u1ea3n Thi\u1ebft l\u1eadp SNMP_COMMUNITY t\u1ea1i tab Macros 2.T\u1ea1o item c\u1ee7a host v\u1eeda t\u1ea1o : Type: SNMP2 agent Key: net.if.status[ifOperStatus.*] thay * b\u1eb1ng t\u00ean oid port c\u1ea7n monitor , vd net.if.status[ifOperStatus.10121] Type of information: Numeric (unsigned); Data type: Decimal Show Value: IF-MIB::ifOperStatus Application: Network Interfaces 4.T\u1ea1o trigger: Name: interface down Severity: High Expression: {Interface Gi1-0-21:net.if.status[ifOperStatus.10121].last()}=2 v\u1edbi Interface Gi1-0-21:net.if.status[ifOperStatus.10121] l\u00e0 item th\u00eam \u1edf tr\u00ean . b\u1eadt trigger khi gi\u00e1 tr\u1ecb b\u1eb1ng 2","title":"C\u1ea5u h\u00ecnh zabbix \u0111\u1ec3 nh\u1eadn c\u1ea3nh b\u00e1o v\u1ec1 1 interface c\u1ee7a switch down:"},{"location":"tech_detail/zabbix/zabbix-doc/readme/","text":"","title":"zabbix"}]}